{"version":3,"file":"post-detail.js","sources":["pages/community/post-detail.vue","../../../Software/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tbXVuaXR5L3Bvc3QtZGV0YWlsLnZ1ZQ"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- 顶部导航栏 -->\n    <view class=\"header bg-white px-4 pt-10 pb-3\">\n      <view class=\"flex items-center\">\n        <view @tap=\"goBack\" class=\"p-2\">\n          <IconImage name=\"back\" :size=\"18\" />\n        </view>\n        <view class=\"flex-1 text-center\">\n          <text class=\"text-gray-900 text-lg font-medium\">帖子详情</text>\n        </view>\n        <view class=\"w-24px\" v-if=\"post && post.isCurrentUser\" @tap=\"showDeleteOption\">\n          <IconImage name=\"more\" :size=\"16\" />\n        </view>\n        <view class=\"w-24px\" v-else>\n          <!-- 占位元素保持布局一致 -->\n        </view>\n      </view>\n    </view>\n\n    <!-- 加载状态 -->\n    <view v-if=\"loading\" class=\"flex justify-center py-10\">\n      <image src=\"/static/images/loading.gif\" class=\"w-12 h-12\"></image>\n    </view>\n\n    <!-- 内容区 -->\n    <view v-else-if=\"post\" class=\"post-content bg-white\">\n      <!-- 用户信息 -->\n      <view class=\"px-4 pt-4 flex items-center\">\n        <image :src=\"post.userInfo && post.userInfo.avatar ? post.userInfo.avatar : '/static/images/user-avatar.jpg'\" alt=\"用户头像\" class=\"avatar mr-3\"></image>\n        <view>\n          <view class=\"flex items-center\">\n            <text class=\"font-medium text-gray-900\">{{ post.userInfo && post.userInfo.nickname ? post.userInfo.nickname : '未知用户' }}</text>\n            <text v-if=\"post.userInfo && post.userInfo.location\" class=\"text-xs text-gray-500 ml-2\">{{ post.userInfo.location }}</text>\n          </view>\n          <text class=\"text-xs text-gray-500\">{{ post.createdAt || '未知时间' }}</text>\n        </view>\n        <button \n          v-if=\"!post.isCurrentUser\"\n          class=\"ml-auto text-sm px-3 py-1 rounded-full border\" \n          :class=\"[post.isFollowed ? 'text-gray-400 border-gray-300' : 'text-green-500 border-green-500']\"\n          @tap=\"handleFollow\">\n          {{ post.isFollowed ? '已关注' : '+ 关注' }}\n        </button>\n      </view>\n\n      <!-- 帖子内容 -->\n      <view class=\"px-4 py-3\">\n        <text class=\"text-base text-gray-800 leading-relaxed\">{{ post.content || '' }}</text>\n      </view>\n\n      <!-- 帖子图片 -->\n      <view v-if=\"post.images && post.images.length > 0\" class=\"px-4 mb-4\">\n        <view v-if=\"post.images.length === 1\">\n          <image :src=\"post.images[0]\" alt=\"帖子图片\" class=\"w-full rounded-lg\" mode=\"widthFix\" @tap=\"previewImage(post.images[0])\"></image>\n        </view>\n        <view v-else class=\"image-grid\" :class=\"'grid-' + Math.min(post.images.length, 3)\">\n          <view \n            v-for=\"(img, index) in post.images\" \n            :key=\"index\" \n            class=\"image-item\" \n            @tap=\"previewImage(img, post.images)\">\n            <image :src=\"img\" mode=\"aspectFill\" class=\"w-full h-full\"></image>\n          </view>\n        </view>\n      </view>\n\n      <!-- 标签 -->\n      <view v-if=\"post.label\" class=\"px-4 mb-4 flex flex-wrap\">\n        <text \n          v-for=\"(tag, index) in formatTags(post.label)\" \n          :key=\"index\" \n          class=\"tag\" \n          :class=\"{'space-left': index > 0}\">\n          # {{ tag }}\n        </text>\n      </view>\n\n      <!-- 互动统计 -->\n      <view class=\"px-4 py-3 border-t border-b flex justify-between text-gray-500 text-sm\">\n        <view class=\"flex items-center\">\n          <image src=\"/static/images/icons/icon-eye.svg\" class=\"mr-1 icon-size\"></image>\n          <text>{{ post.eyes }}</text>\n        </view>\n        <view \n          class=\"flex items-center\" \n          :class=\"{'text-red-500': post.isLiked}\"\n          @tap=\"handleLike\">\n          <image :src=\"post.isLiked ? '/static/images/icons/icon-heart-active.svg' : '/static/images/icons/icon-heart.svg'\" class=\"mr-1 icon-size\"></image>\n          <text>{{ post.likes }}</text>\n        </view>\n        <view class=\"flex items-center\">\n          <image src=\"/static/images/icons/icon-comment.svg\" class=\"mr-1 icon-size\"></image>\n          <text>{{ post.comments }}</text>\n        </view>\n        <view \n          class=\"flex items-center\" \n          :class=\"{'text-green-500': post.isCollected}\"\n          @tap=\"handleCollect\">\n          <image src=\"/static/images/icons/icon-bookmark.svg\" class=\"mr-1 icon-size\"></image>\n          <text>{{ post.isCollected ? '已收藏' : '收藏' }}</text>\n        </view>\n        <view class=\"flex items-center\">\n          <image src=\"/static/images/icons/icon-share.svg\" class=\"mr-1 icon-size\"></image>\n          <text>分享</text>\n        </view>\n      </view>\n\n      <!-- 评论区 -->\n      <view class=\"comment-section\">\n        <view class=\"px-4 py-3 bg-gray-50 border-b\">\n          <text class=\"font-medium\">{{ post.comments || 0 }}条评论</text>\n        </view>\n\n        <!-- 评论列表 -->\n        <view v-if=\"commentList.length > 0\">\n          <view v-for=\"(comment, index) in commentList\" :key=\"comment._id\" class=\"comment-item px-4 py-3 border-b\">\n            <view class=\"flex\">\n              <image :src=\"comment.userInfo.avatar\" alt=\"用户头像\" class=\"comment-avatar mr-3\"></image>\n              <view class=\"flex-1\">\n                <view class=\"flex justify-between items-center\">\n                  <text class=\"font-medium text-sm\">{{ comment.userInfo.nickname }}</text>\n                  <view class=\"flex items-center\">\n                    <image \n                      :src=\"comment.isLiked ? '/static/images/icons/icon-heart-active.svg' : '/static/images/icons/icon-heart.svg'\" \n                      class=\"mr-1 icon-size\"\n                      @tap=\"likeComment(comment)\"></image>\n                    <text class=\"text-xs text-gray-500\">{{ comment.likes || 0 }}</text>\n                  </view>\n                </view>\n                <text class=\"text-sm text-gray-800 py-1\">{{ comment.content }}</text>\n                <view class=\"flex justify-between items-center\">\n                  <text class=\"text-xs text-gray-500\">{{ comment.createdAt }}</text>\n                  <text class=\"text-xs text-gray-500\" @tap=\"replyComment(comment)\">回复</text>\n                </view>\n              </view>\n            </view>\n          </view>\n        </view>\n        \n        <!-- 无评论状态 -->\n        <view v-else class=\"flex flex-col items-center py-10\">\n          <text class=\"text-gray-500\">暂无评论，快来抢沙发吧~</text>\n        </view>\n      </view>\n    </view>\n\n    <!-- 评论输入栏 -->\n    <view class=\"comment-bar\">\n      <view class=\"flex items-center bg-white px-4 py-2 border-t\">\n        <input \n          type=\"text\" \n          v-model=\"commentContent\" \n          class=\"flex-1 bg-gray-100 rounded-full px-4 py-2 text-sm\" \n          placeholder=\"说点什么...\"\n          @confirm=\"submitComment\" />\n        <button \n          class=\"ml-3 px-4 py-1 rounded-full bg-green-500 text-white text-sm\" \n          @tap=\"submitComment\">\n          发送\n        </button>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue';\nimport { getPostDetail, createComment, deletePost } from '../../services/community.js';\nimport { getCurrentUser } from '@/services/login';\nimport IconImage from '../../components/IconImage.vue';\n\n// 为了在模板中使用组件，需要创建别名\nconst IconBack = IconImage;\nconst IconEye = IconImage;\nconst IconHeart = IconImage;\nconst IconComment = IconImage;\nconst IconBookmark = IconImage;\nconst IconShare = IconImage;\n\n// 帖子ID\nconst postId = ref('');\n\n// 帖子数据\nconst post = ref(null);\nconst loading = ref(true);\n\n// 评论相关\nconst commentList = ref([]);\nconst commentContent = ref('');\nconst replyToComment = ref(null);\n\n// 获取参数\nconst getParams = () => {\n  // 从路由参数获取ID\n  const pages = getCurrentPages();\n  const currentPage = pages[pages.length - 1];\n  \n  if (currentPage && currentPage.options) {\n    postId.value = currentPage.options.id;\n    \n    if (postId.value) {\n      loadPostDetail();\n    }\n  }\n};\n\n// 加载帖子详情\nconst loadPostDetail = async () => {\n  try {\n    loading.value = true;\n    const postDetail = await getPostDetail(postId.value);\n    \n    if (postDetail) {\n      post.value = postDetail;\n      commentList.value = postDetail.commentList || [];\n    } else {\n      uni.showToast({\n        title: '帖子不存在或已删除',\n        icon: 'none'\n      });\n      setTimeout(() => {\n        uni.navigateBack();\n      }, 1500);\n    }\n  } catch (error) {\n    console.error('加载帖子详情失败', error);\n    uni.showToast({\n      title: error.message || '加载失败，请重试',\n      icon: 'none'\n    });\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 返回上一页\nconst goBack = () => {\n  uni.navigateBack();\n};\n\n// 处理点赞\nconst handleLike = async () => {\n  if (!post.value) return;\n  \n  post.value.isLiked = !post.value.isLiked;\n  post.value.likes += post.value.isLiked ? 1 : -1;\n  \n  // 调用API保存点赞状态\n  try {\n    await likePost(post.value._id, post.value.isLiked);\n  } catch (apiError) {\n    console.error('API调用失败，但继续使用本地状态', apiError);\n  }\n  \n  // 保存交互状态\n  savePostInteraction(post.value);\n};\n\n// 处理收藏\nconst handleCollect = () => {\n  if (!post.value) return;\n  \n  post.value.isCollected = !post.value.isCollected;\n  \n  // 保存交互状态\n  savePostInteraction(post.value);\n};\n\n// 处理关注\nconst handleFollow = () => {\n  if (!post.value) return;\n  \n  post.value.isFollowed = !post.value.isFollowed;\n  \n  // 保存交互状态\n  savePostInteraction(post.value);\n};\n\n// 保存帖子交互状态\nconst savePostInteraction = (post) => {\n  if (!post || !post._id) return;\n  \n  try {\n    // 保存到交互数据\n    let postInteractions = {};\n    const cachedInteractions = uni.getStorageSync('post_interactions');\n    if (cachedInteractions) {\n      postInteractions = JSON.parse(cachedInteractions);\n    }\n    \n    postInteractions[post._id] = {\n      eyes: post.eyes,\n      likes: post.likes,\n      comments: post.comments,\n      isLiked: post.isLiked,\n      isCollected: post.isCollected,\n      isFollowed: post.isFollowed\n    };\n    \n    uni.setStorageSync('post_interactions', JSON.stringify(postInteractions));\n    \n    // 如果是本地发布的帖子，也更新local_posts中的状态\n    let localPosts = [];\n    const cachedPosts = uni.getStorageSync('local_posts');\n    if (cachedPosts) {\n      localPosts = JSON.parse(cachedPosts);\n      const postIndex = localPosts.findIndex(p => p._id === post._id);\n      if (postIndex !== -1) {\n        localPosts[postIndex].likes = post.likes;\n        localPosts[postIndex].isLiked = post.isLiked;\n        localPosts[postIndex].isCollected = post.isCollected;\n        localPosts[postIndex].isFollowed = post.isFollowed;\n        uni.setStorageSync('local_posts', JSON.stringify(localPosts));\n      }\n    }\n  } catch (e) {\n    console.error('保存交互状态失败', e);\n  }\n};\n\n// 预览图片\nconst previewImage = (current, urls = []) => {\n  if (!current) return;\n  \n  // 如果只传入了一个参数，则将其作为urls\n  if (!urls.length) {\n    urls = [current];\n  }\n  \n  uni.previewImage({\n    current: current,\n    urls: urls\n  });\n};\n\n// 回复评论\nconst replyComment = (comment) => {\n  replyToComment.value = comment;\n  commentContent.value = `@${comment.userInfo.nickname} `;\n  // 聚焦输入框\n  uni.pageScrollTo({\n    scrollTop: 99999,\n    duration: 300\n  });\n};\n\n// 点赞评论\nconst likeComment = (comment) => {\n  comment.isLiked = !comment.isLiked;\n  if (comment.isLiked) {\n    comment.likes++;\n  } else {\n    comment.likes--;\n  }\n  \n  // 这里可以调用接口更新点赞状态\n};\n\n// 提交评论\nconst submitComment = async () => {\n  if (!commentContent.value.trim()) {\n    uni.showToast({\n      title: '评论内容不能为空',\n      icon: 'none'\n    });\n    return;\n  }\n  \n  // 确保post存在且有_id\n  if (!post.value || !post.value._id) {\n    uni.showToast({\n      title: '帖子加载失败，请返回重试',\n      icon: 'none'\n    });\n    return;\n  }\n  \n  try {\n    const commentData = {\n      postId: post.value._id,\n      content: commentContent.value,\n      parentId: replyToComment.value ? replyToComment.value._id : null\n    };\n    \n    const result = await createComment(commentData);\n    commentList.value.unshift(result);\n    \n    // 更新评论数\n    post.value.comments += 1;\n    \n    // 清空输入框和回复对象\n    commentContent.value = '';\n    replyToComment.value = null;\n    \n    uni.showToast({\n      title: '评论成功',\n      icon: 'success'\n    });\n  } catch (error) {\n    console.error('提交评论失败', error);\n    uni.showToast({\n      title: error.message || '评论失败，请重试',\n      icon: 'none'\n    });\n  }\n};\n\n// 格式化标签\nconst formatTags = (labelStr) => {\n  if (!labelStr) return [];\n  return labelStr.split(',').map(item => item.trim()).filter(Boolean);\n};\n\n// 显示删除选项\nconst showDeleteOption = () => {\n  uni.showActionSheet({\n    itemList: ['删除'],\n    itemColor: '#ff0000',\n    success: (res) => {\n      if (res.tapIndex === 0) {\n        confirmDeletePost();\n      }\n    }\n  });\n};\n\n// 确认删除帖子\nconst confirmDeletePost = () => {\n  if (!post.value) return;\n  \n  uni.showModal({\n    title: '确认删除',\n    content: '确定要删除这条帖子吗？删除后无法恢复。',\n    confirmColor: '#ff0000',\n    success: (res) => {\n      if (res.confirm) {\n        handleDeletePost();\n      }\n    }\n  });\n};\n\n// 处理删除帖子\nconst handleDeletePost = async () => {\n  if (!post.value || !post.value._id) return;\n  \n  try {\n    uni.showLoading({ title: '删除中...' });\n    await deletePost(post.value._id);\n    \n    uni.hideLoading();\n    uni.showToast({ \n      title: '删除成功',\n      icon: 'success'\n    });\n    \n    // 返回上一页\n    setTimeout(() => {\n      uni.navigateBack();\n    }, 1000);\n  } catch (error) {\n    uni.hideLoading();\n    uni.showToast({\n      title: error.message || '删除失败',\n      icon: 'none'\n    });\n  }\n};\n\n// 页面加载\nonMounted(() => {\n  getParams();\n});\n</script>\n\n<style>\n.container {\n  background-color: #f8f9fa;\n  min-height: 100vh;\n  padding-bottom: 60px; /* 留出底部输入框的空间 */\n}\n\n.header {\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.avatar {\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  background-color: #f5f5f5;\n}\n\n.comment-avatar {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: #f5f5f5;\n}\n\n.tag {\n  border-radius: 12px;\n  padding: 2px 10px;\n  font-size: 12px;\n  background-color: rgba(76, 175, 80, 0.1);\n  color: #4CAF50;\n  display: inline-block;\n  margin-bottom: 6px;\n}\n\n.space-left {\n  margin-left: 8px;\n}\n\n.image-grid {\n  display: grid;\n  grid-gap: 8px;\n}\n\n.grid-1 {\n  grid-template-columns: 1fr;\n}\n\n.grid-2 {\n  grid-template-columns: 1fr 1fr;\n}\n\n.grid-3 {\n  grid-template-columns: 1fr 1fr 1fr;\n}\n\n.image-item {\n  aspect-ratio: 1;\n  overflow: hidden;\n  border-radius: 8px;\n}\n\n.comment-bar {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n}\n\n/* 工具类 */\n.bg-white { background-color: #ffffff; }\n.bg-gray-50 { background-color: #f9fafb; }\n.bg-gray-100 { background-color: #f3f4f6; }\n.bg-green-500 { background-color: #4CAF50; }\n\n.text-white { color: #ffffff; }\n.text-gray-400 { color: #9ca3af; }\n.text-gray-500 { color: #6b7280; }\n.text-gray-600 { color: #4b5563; }\n.text-gray-800 { color: #1f2937; }\n.text-gray-900 { color: #111827; }\n.text-green-500 { color: #4CAF50; }\n.text-red-500 { color: #ef4444; }\n\n.text-xs { font-size: 12px; }\n.text-sm { font-size: 14px; }\n.text-base { font-size: 16px; }\n.text-lg { font-size: 18px; }\n.font-medium { font-weight: 500; }\n\n.flex { display: flex; }\n.flex-1 { flex: 1; }\n.flex-col { flex-direction: column; }\n.flex-wrap { flex-wrap: wrap; }\n.items-center { align-items: center; }\n.justify-between { justify-content: space-between; }\n.justify-center { justify-content: center; }\n\n.px-3 { padding-left: 12px; padding-right: 12px; }\n.px-4 { padding-left: 16px; padding-right: 16px; }\n.py-1 { padding-top: 4px; padding-bottom: 4px; }\n.py-2 { padding-top: 8px; padding-bottom: 8px; }\n.py-3 { padding-top: 12px; padding-bottom: 12px; }\n.py-10 { padding-top: 40px; padding-bottom: 40px; }\n.pt-4 { padding-top: 16px; }\n.pt-10 { padding-top: 40px; }\n.pb-3 { padding-bottom: 12px; }\n.pb-4 { padding-bottom: 16px; }\n\n.m-2 { margin: 8px; }\n.mx-2 { margin-left: 8px; margin-right: 8px; }\n.my-2 { margin-top: 8px; margin-bottom: 8px; }\n.mr-1 { margin-right: 4px; }\n.mr-3 { margin-right: 12px; }\n.ml-2 { margin-left: 8px; }\n.ml-3 { margin-left: 12px; }\n.ml-auto { margin-left: auto; }\n\n.border { border-width: 1px; border-style: solid; }\n.border-t { border-top-width: 1px; border-top-style: solid; border-top-color: #e5e7eb; }\n.border-b { border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #e5e7eb; }\n.border-gray-300 { border-color: #d1d5db; }\n.border-green-500 { border-color: #4CAF50; }\n\n.rounded-lg { border-radius: 8px; }\n.rounded-full { border-radius: 9999px; }\n\n.w-full { width: 100%; }\n.h-full { height: 100%; }\n.w-12 { width: 48px; }\n.h-12 { height: 48px; }\n.w-24px { width: 24px; }\n\n.icon-size {\n  width: 16px;\n  height: 16px;\n}\n\n.back-icon {\n  width: 18px;\n  height: 18px;\n}\n\n.leading-relaxed { line-height: 1.625; }\n</style> ","import MiniProgramPage from 'D:/Documents/HBuilderProjects/CarbonFootprint/pages/community/post-detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","getPostDetail","uni","post","createComment","deletePost","onMounted","MiniProgramPage"],"mappings":"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"}