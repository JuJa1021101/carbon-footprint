{"version":3,"file":"mall.js","sources":["pages/mall/mall.vue","../../../Software/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbWFsbC9tYWxsLnZ1ZQ"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- 顶部导航栏 -->\n    <view class=\"px-4 pt-10 pb-4 bg-white\">\n      <view class=\"flex items-center justify-between mb-4\">\n        <text class=\"text-xl font-bold\">积分商城</text>\n        <view class=\"flex\">\n          <view class=\"mr-5\" @tap=\"forceRefresh\">\n            <text class=\"iconfont icon-refresh text-gray-500\"></text>\n          </view>\n          <view class=\"mr-5\">\n            <text class=\"iconfont icon-heart text-gray-500\"></text>\n          </view>\n          <view class=\"relative\">\n            <text class=\"iconfont icon-shopping-bag text-gray-500\"></text>\n            <text class=\"badge-dot\" v-if=\"redemptionCount > 0\">{{redemptionCount}}</text>\n          </view>\n        </view>\n      </view>\n\n      <!-- 搜索框 -->\n      <view class=\"search-container\">\n        <view class=\"search-input-wrapper\">\n          <image src=\"/static/images/icons/icon-search.svg\" class=\"search-icon\" @tap=\"handleSearch\"></image>\n          <input \n            type=\"text\" \n            v-model=\"searchKeyword\"\n            class=\"search-input\" \n            placeholder=\"搜索环保产品...\"\n            @confirm=\"handleSearch\">\n          <image \n            v-if=\"searchKeyword\" \n            src=\"/static/images/icons/icon-close-circle.svg\"\n            class=\"clear-icon\" \n            @tap=\"clearSearch\"></image>\n        </view>\n        \n        <!-- 搜索状态 -->\n        <view v-if=\"isSearchMode\" class=\"search-status mt-2\">\n          <view class=\"flex items-center\">\n            <text class=\"text-sm\">关键词: \"{{ searchKeyword }}\"</text>\n            <text class=\"text-xs text-gray-500 ml-2\">(找到 {{ searchResults.length }} 条结果)</text>\n            <view class=\"ml-auto\">\n              <text class=\"text-green-500 text-sm\" @tap=\"exitSearch\">退出搜索</text>\n            </view>\n          </view>\n        </view>\n      </view>\n    </view>\n\n    <!-- 下拉刷新区域 -->\n    <scroll-view \n      scroll-y \n      class=\"mall-content\" \n      refresher-enabled\n      :refresher-triggered=\"refreshing\"\n      @refresherrefresh=\"onRefresh\"\n      @scrolltolower=\"onLoadMore\">\n      \n      <!-- 我的积分状态 -->\n      <view class=\"px-4 py-4 bg-white border-b\">\n        <view class=\"flex items-center justify-between\">\n          <view>\n            <text class=\"text-sm text-gray-500\">我的环保积分</text>\n            <view class=\"flex items-baseline\">\n              <text class=\"text-2xl font-bold mr-2\">{{userPoints}}</text>\n              <text class=\"text-sm text-gray-500\">可兑换</text>\n            </view>\n          </view>\n          <view class=\"bg-green-50 px-4 py-2 rounded-lg\">\n            <text class=\"text-xs text-gray-500 mb-1\">本月已获得积分</text>\n            <text class=\"text-green-500 font-semibold\">+{{monthPoints}}</text>\n          </view>\n        </view>\n      </view>\n\n      <!-- 商品更新提示 -->\n      <view v-if=\"showUpdateTip\" class=\"update-tip\" @tap=\"refreshData\">\n        <text class=\"update-tip-text\">商品信息已更新，点击刷新</text>\n      </view>\n\n      <!-- 分类导航 -->\n      <view class=\"px-4 py-3 bg-white\" v-if=\"!isSearchMode\">\n        <scroll-view scroll-x class=\"flex whitespace-nowrap pb-2\">\n          <text class=\"category-btn\" :class=\"{'active': currentCategory === '全部'}\" @click=\"changeCategory('全部')\">全部</text>\n          <text class=\"category-btn flex-shrink-0 space-left\" :class=\"{'active': currentCategory === '热门'}\" @click=\"changeCategory('热门')\">热门</text>\n          <text class=\"category-btn flex-shrink-0 space-left\" :class=\"{'active': currentCategory === '限时兑换'}\" @click=\"changeCategory('限时兑换')\">限时兑换</text>\n          <text class=\"category-btn flex-shrink-0 space-left\" :class=\"{'active': currentCategory === '环保用品'}\" @click=\"changeCategory('环保用品')\">环保用品</text>\n          <text class=\"category-btn flex-shrink-0 space-left\" :class=\"{'active': currentCategory === '绿植花卉'}\" @click=\"changeCategory('绿植花卉')\">绿植花卉</text>\n          <text class=\"category-btn flex-shrink-0 space-left\" :class=\"{'active': currentCategory === '优惠券'}\" @click=\"changeCategory('优惠券')\">优惠券</text>\n        </scroll-view>\n      </view>\n\n      <!-- 商品列表 -->\n      <view class=\"p-4\">\n        <!-- 如果是搜索模式，显示搜索结果 -->\n        <view v-if=\"isSearchMode\">\n          <!-- 搜索结果为空 -->\n          <view v-if=\"searchResults.length === 0\" class=\"flex flex-col items-center py-10\">\n            <text class=\"iconfont icon-search text-gray-300 text-5xl mb-4\"></text>\n            <text class=\"text-gray-500\">没有找到相关商品</text>\n          </view>\n          \n          <!-- 搜索结果列表 -->\n          <view v-else>\n            <view class=\"grid-2 gap-4\">\n              <view class=\"product-card\" v-for=\"(reward, index) in searchResults\" :key=\"reward._id\">\n                <view class=\"product-img-container\">\n                  <image :src=\"formatImageUrl(reward.image_url) || formatImageUrl(reward.image)\" :alt=\"reward.name\" class=\"product-img\" @error=\"handleImageError\"></image>\n                  <view class=\"point-tag\">{{reward.required_points || reward.points}}积分</view>\n                </view>\n                <view class=\"p-2\">\n                  <text class=\"font-medium text-sm mb-1\">{{reward.name}}</text>\n                  <view class=\"flex items-center justify-between\">\n                    <text class=\"text-xs text-gray-500\">库存:{{getStockQuantity(reward)}}</text>\n                    <button class=\"btn-exchange-small\" v-if=\"reward.status === 'available'\" @click=\"confirmRedemption(reward)\">兑换</button>\n                    <button class=\"btn-exchange-disabled-small\" v-else-if=\"reward.status === 'unavailable'\">积分不足</button>\n                    <button class=\"btn-exchange-disabled-small\" v-else>已售罄</button>\n                  </view>\n                </view>\n              </view>\n            </view>\n          </view>\n        </view>\n        \n        <!-- 正常模式显示标准商品列表 -->\n        <view v-else>\n          <!-- 限时兑换区 -->\n          <view class=\"mb-6\" v-if=\"limitedTimeRewards.length > 0\">\n            <view class=\"flex justify-between items-center mb-3\">\n              <text class=\"text-lg font-semibold\">限时兑换</text>\n              <view class=\"flex items-center\">\n                <text class=\"text-sm text-gray-500\" @click=\"viewMore('限时兑换')\">查看更多</text>\n                <IconImage :name=\"'right'\" class=\"text-xs text-gray-500 ml-1\" size=\"12\"></IconImage>\n              </view>\n            </view>\n\n            <view class=\"card bg-white p-3 mb-4\" v-for=\"(reward, index) in displayedLimitedTimeRewards\" :key=\"reward._id\">\n              <view class=\"flex items-center\">\n                <view class=\"product-img-container-lg\">\n                  <image :src=\"formatImageUrl(reward.image_url) || formatImageUrl(reward.image)\" :alt=\"reward.name\" class=\"product-image\" @error=\"handleImageError\"></image>\n                  <view class=\"point-tag\">{{reward.required_points || reward.points}}积分</view>\n                </view>\n                <view class=\"ml-4 flex-grow\">\n                  <text class=\"font-medium text-sm mb-1\">{{reward.name}}</text>\n                  <text v-if=\"reward.description\" class=\"text-xs text-gray-500 mb-1 line-clamp-2\">{{reward.description}}</text>\n                  <view class=\"flex items-center mb-1\">\n                    <text class=\"stock-tag mr-2\">库存{{getStockQuantity(reward)}}</text>\n                    <text class=\"text-xs text-red-500\" v-if=\"reward.remaining_time\">剩余：{{reward.remaining_time.text || '0天0小时'}}</text>\n                  </view>\n                  <view class=\"mb-2\">\n                    <view class=\"flex justify-between text-xs mb-1\">\n                      <text>已兑换进度</text>\n                      <text>70%</text>\n                    </view>\n                    <view class=\"progress-bar\">\n                      <view class=\"progress\" style=\"width: 70%\"></view>\n                    </view>\n                  </view>\n                  <button class=\"btn-exchange\" v-if=\"reward.status === 'available'\" @click=\"confirmRedemption(reward)\">立即兑换</button>\n                  <button class=\"btn-exchange-disabled\" v-else-if=\"reward.status === 'unavailable'\">积分不足</button>\n                  <button class=\"btn-exchange-disabled\" v-else>已售罄</button>\n                </view>\n              </view>\n            </view>\n          </view>\n\n          <!-- 热门兑换 -->\n          <view class=\"mb-6\" v-if=\"hotRewards.length > 0\">\n            <view class=\"flex justify-between items-center mb-3\">\n              <text class=\"text-lg font-semibold\">热门兑换</text>\n              <view class=\"flex items-center\">\n                <text class=\"text-sm text-gray-500\" @click=\"viewMore('热门')\">查看更多</text>\n                <IconImage :name=\"'right'\" class=\"text-xs text-gray-500 ml-1\" size=\"12\"></IconImage>\n              </view>\n            </view>\n\n            <view class=\"grid-2 gap-4\">\n              <view class=\"product-card\" v-for=\"(reward, index) in displayedHotRewards\" :key=\"reward._id\">\n                <view class=\"product-img-container\">\n                  <image :src=\"formatImageUrl(reward.image_url) || formatImageUrl(reward.image)\" :alt=\"reward.name\" class=\"product-img\" @error=\"handleImageError\"></image>\n                  <view class=\"point-tag\">{{reward.required_points || reward.points}}积分</view>\n                </view>\n                <view class=\"p-2\">\n                  <text class=\"font-medium text-sm mb-1\">{{reward.name}}</text>\n                  <view class=\"flex items-center justify-between\">\n                    <text class=\"text-xs text-gray-500\">库存:{{getStockQuantity(reward)}}</text>\n                    <button class=\"btn-exchange-small\" v-if=\"reward.status === 'available'\" @click=\"confirmRedemption(reward)\">兑换</button>\n                    <button class=\"btn-exchange-disabled-small\" v-else-if=\"reward.status === 'unavailable'\">积分不足</button>\n                    <button class=\"btn-exchange-disabled-small\" v-else>已售罄</button>\n                  </view>\n                </view>\n              </view>\n            </view>\n          </view>\n\n          <!-- 积分兑换专区 -->\n          <view v-if=\"categoryRewards.length > 0\">\n            <view class=\"flex justify-between items-center mb-3\">\n              <text class=\"text-lg font-semibold\">积分兑换专区</text>\n              <view class=\"flex items-center\">\n                <text class=\"text-sm text-gray-500\" @click=\"viewMore('全部')\">查看更多</text>\n                <IconImage :name=\"'right'\" class=\"text-xs text-gray-500 ml-1\" size=\"12\"></IconImage>\n              </view>\n            </view>\n\n            <view class=\"grid-2 gap-4\">\n              <view class=\"product-card\" v-for=\"(reward, index) in categoryRewards\" :key=\"reward._id\">\n                <view class=\"product-img-container\">\n                  <image :src=\"formatImageUrl(reward.image_url) || formatImageUrl(reward.image)\" :alt=\"reward.name\" class=\"product-img\" @error=\"handleImageError\"></image>\n                  <view class=\"point-tag\">{{reward.required_points || reward.points}}积分</view>\n                </view>\n                <view class=\"p-2\">\n                  <text class=\"font-medium text-sm mb-1\">{{reward.name}}</text>\n                  <view class=\"flex items-center justify-between\">\n                    <text class=\"text-xs text-gray-500\">库存:{{getStockQuantity(reward)}}</text>\n                    <button class=\"btn-exchange-small\" v-if=\"reward.status === 'available'\" @click=\"confirmRedemption(reward)\">兑换</button>\n                    <button class=\"btn-exchange-disabled-small\" v-else-if=\"reward.status === 'unavailable'\">积分不足</button>\n                    <button class=\"btn-exchange-disabled-small\" v-else>已售罄</button>\n                  </view>\n                </view>\n              </view>\n            </view>\n          </view>\n        </view>\n      </view>\n      \n      <!-- 加载状态 -->\n      <view v-if=\"loading\" class=\"loading-container py-5\">\n        <view class=\"loading-spinner\"></view>\n        <text class=\"loading-text\">正在加载商品信息...</text>\n      </view>\n    </scroll-view>\n    \n    <!-- 兑换确认弹窗 -->\n    <uni-popup ref=\"redemptionPopup\" type=\"center\">\n      <view class=\"bg-white rounded-lg p-4\" style=\"width: 300px;\">\n        <view class=\"text-center mb-4\">\n          <text class=\"text-lg font-bold\">确认兑换</text>\n        </view>\n        <view class=\"mb-4\" v-if=\"selectedReward\">\n          <view class=\"flex items-center mb-3\">\n            <image :src=\"formatImageUrl(selectedReward.image_url) || formatImageUrl(selectedReward.image)\" class=\"w-16 h-16 rounded object-cover\"></image>\n            <view class=\"ml-3\">\n              <text class=\"font-medium\">{{selectedReward.name}}</text>\n              <text class=\"text-red-500 block\">{{selectedReward.required_points || selectedReward.points}}积分</text>\n            </view>\n          </view>\n          <view class=\"bg-gray-100 p-3 rounded mb-3\">\n            <text class=\"text-sm\">您当前积分: {{userPoints}}</text>\n            <text class=\"text-sm block\">兑换后剩余: {{userPoints - (selectedReward.required_points || selectedReward.points || 0)}}</text>\n          </view>\n          \n          <view v-if=\"addresses.length > 0\">\n            <text class=\"font-medium mb-2 block\">选择收货地址:</text>\n            <picker @change=\"addressChange\" :value=\"selectedAddressIndex\" :range=\"addressOptions\">\n              <view class=\"bg-gray-100 p-2 rounded\">\n                <text class=\"text-sm\" v-if=\"selectedAddress\">{{selectedAddress.name}} {{selectedAddress.phone}} - {{selectedAddress.address}}</text>\n                <text class=\"text-sm\" v-else>请选择收货地址</text>\n              </view>\n            </picker>\n          </view>\n          <view v-else class=\"text-center text-red-500 my-3\">\n            <text>您还没有添加收货地址</text>\n            <text class=\"text-blue-500 ml-2\" @click=\"goToAddAddress\">去添加</text>\n          </view>\n        </view>\n        <view class=\"flex justify-between\">\n          <button class=\"btn-cancel\" @click=\"closePopup\">取消</button>\n          <button class=\"btn-confirm\" @click=\"redeemReward\" :disabled=\"!selectedAddress || isRedeeming\">确认兑换</button>\n        </view>\n      </view>\n    </uni-popup>\n    \n    <!-- 结果提示弹窗 -->\n    <uni-popup ref=\"resultPopup\" type=\"center\">\n      <view class=\"bg-white rounded-lg p-4 text-center\" style=\"width: 250px;\">\n        <text class=\"text-lg font-bold mb-3 block\">{{resultMessage}}</text>\n        <button class=\"btn-confirm w-full\" @click=\"closeResultPopup\">确定</button>\n      </view>\n    </uni-popup>\n  </view>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, watch, onUnmounted, nextTick } from 'vue';\nimport { getCurrentUserFromProfile } from '@/services/login.js';\nimport { searchRewards, getUserPoints, ensureStockQuantity } from '@/services/mall.js';\nimport { updatePointsCache } from '@/services/points.js';\nimport IconImage from '@/components/IconImage.vue';\n\n// 用户积分\nconst userPoints = ref(1000); // 默认值设为1000\nconst monthPoints = ref(0);\nconst redemptionCount = ref(0);\n\n// 分类和商品\nconst currentCategory = ref('全部');\nconst allRewards = ref([]);\nconst limitedTimeRewards = ref([]);\nconst hotRewards = ref([]);\nconst regularRewards = ref([]);  // 新增：普通商品列表\n\n// 格式化图片URL，确保路径正确\nconst formatImageUrl = (url) => {\n  if (!url) return '/static/images/mall/default-product.png';\n  \n  // 如果不是以斜杠或http开头，添加前导斜杠\n  if (!url.startsWith('/') && !url.startsWith('http')) {\n    return '/' + url;\n  }\n  \n  return url;\n};\n\n// 搜索相关\nconst searchKeyword = ref('');\nconst isSearchMode = ref(false);\nconst searchResults = ref([]);\nconst searchPage = ref(1);\nconst searchPageSize = ref(20);\n\n// 弹窗相关\nconst redemptionPopup = ref(null);\nconst resultPopup = ref(null);\nconst selectedReward = ref(null);\nconst resultMessage = ref('');\nconst isRedeeming = ref(false);\n\n// 地址相关\nconst addresses = ref([]);\nconst selectedAddressIndex = ref(0);\nconst selectedAddress = ref(null);\nconst addressChanged = ref(false);\n\n// 刷新和加载状态\nconst refreshing = ref(false);\nconst loading = ref(true);\nconst showUpdateTip = ref(false);\nconst hasUpdates = ref(false);\n\n// 计算属性：根据分类和限制显示商品\nconst displayedLimitedTimeRewards = computed(() => {\n  return limitedTimeRewards.value.slice(0, 1); // 限时商品只显示1个\n});\n\nconst displayedHotRewards = computed(() => {\n  return hotRewards.value.slice(0, 4); // 热门商品最多显示4个\n});\n\nconst categoryRewards = computed(() => {\n  if (currentCategory.value === '全部') {\n    return regularRewards.value.slice(0, 4); // 普通商品最多显示4个\n  } else if (currentCategory.value === '限时兑换') {\n    return limitedTimeRewards.value;\n  } else if (currentCategory.value === '热门') {\n    return hotRewards.value;\n  } else {\n    return regularRewards.value.filter(item => item.category === currentCategory.value).slice(0, 8);\n  }\n});\n\n// 地址选项\nconst addressOptions = computed(() => {\n  return addresses.value.map(addr => `${addr.name} ${addr.phone} - ${addr.address}`);\n});\n\n// 安全获取库存数量\nconst getStockQuantity = (reward) => {\n  if (!reward) return 0;\n  \n  // 使用辅助函数确保库存数量是安全的数字\n  const safeReward = ensureStockQuantity(reward);\n  \n  // 优先使用stock_quantity，如果没有则使用stock\n  return typeof safeReward.stock_quantity !== 'undefined' ? safeReward.stock_quantity : \n         (typeof safeReward.stock !== 'undefined' ? safeReward.stock : 0);\n};\n\n// 搜索商品\nconst handleSearch = async () => {\n  if (!searchKeyword.value.trim()) {\n    if (isSearchMode.value) {\n      exitSearch();\n    }\n    return;\n  }\n  \n  // 设置为搜索模式\n  isSearchMode.value = true;\n  searchPage.value = 1;\n  \n  try {\n    uni.showLoading({ title: '搜索中...' });\n    \n    // 调用搜索服务\n    const result = await searchRewards(searchKeyword.value, {\n      page: searchPage.value,\n      pageSize: searchPageSize.value\n    });\n    \n    if (result.success) {\n      // 确保搜索结果的图片路径正确\n      searchResults.value = result.data.map(reward => {\n        // 使用ensureStockQuantity确保数据格式正确\n        const safeReward = ensureStockQuantity(reward);\n        \n        // 确保图片路径格式正确\n        if (safeReward.image_url) {\n          safeReward.image_url = formatImageUrl(safeReward.image_url);\n        }\n        if (safeReward.image) {\n          safeReward.image = formatImageUrl(safeReward.image);\n        }\n        \n        return safeReward;\n      });\n      \n      console.log(`搜索结果: 找到 ${result.data.length} 个商品`);\n      \n      // 打印图片路径调试信息\n      searchResults.value.forEach(reward => {\n        console.log(`搜索商品[${reward.name}]图片路径: ${reward.image_url}`);\n      });\n    } else {\n      searchResults.value = [];\n      uni.showToast({\n        title: result.message || '搜索失败',\n        icon: 'none'\n      });\n    }\n  } catch (error) {\n    console.error('搜索失败', error);\n    uni.showToast({\n      title: '搜索失败，请稍后重试',\n      icon: 'none'\n    });\n  } finally {\n    uni.hideLoading();\n  }\n};\n\n// 清除搜索\nconst clearSearch = () => {\n  searchKeyword.value = '';\n  if (isSearchMode.value) {\n    exitSearch();\n  }\n};\n\n// 退出搜索模式\nconst exitSearch = () => {\n  isSearchMode.value = false;\n  searchKeyword.value = '';\n  searchResults.value = [];\n};\n\n// 修改分类\nconst changeCategory = (category) => {\n  currentCategory.value = category;\n};\n\n// 查看更多\nconst viewMore = (category) => {\n  // 根据类型切换到相应的分类\n  if (category === '热门') {\n    currentCategory.value = '热门';\n    uni.showToast({\n      title: '已切换到热门兑换专区',\n      icon: 'none'\n    });\n  } else if (category === '限时兑换') {\n    currentCategory.value = '限时兑换';\n    uni.showToast({\n      title: '已切换到限时兑换专区',\n      icon: 'none'\n    });\n  } else {\n    currentCategory.value = '全部';\n    uni.showToast({\n      title: '已切换到积分兑换专区',\n      icon: 'none'\n    });\n  }\n  \n  // 滚动到分类导航区域\n  uni.pageScrollTo({\n    scrollTop: 0,\n    duration: 300\n  });\n};\n\n// 在页面显示时刷新数据\nuni.$on('addressUpdated', () => {\n  loadAddresses();\n  addressChanged.value = true;\n});\n\n// 初始化数据\nonMounted(async () => {\n  // 首先加载用户积分，强制从云端刷新\n  await loadUserPoints(true);\n  \n  // 加载限时商品，优先展示\n  try {\n    await loadLimitedTimeRewards();\n    console.log('已加载限时商品:', limitedTimeRewards.value);\n  } catch (error) {\n    console.error('加载限时商品失败:', error);\n  }\n  \n  // 然后加载其他数据\n  try {\n    await Promise.all([\n      loadAddresses(),\n      loadAllRewards(),\n      loadHotRewards(),\n      loadRedemptionCount()\n    ]);\n    \n    // 对所有商品进行分类\n    categorizeRewards();\n    loading.value = false;\n  } catch (loadError) {\n    console.error('加载商品数据失败:', loadError);\n    loading.value = false;\n  }\n  \n  // 监听积分更新事件\n  uni.$on('userPointsUpdated', handlePointsUpdate);\n  \n  // 监听商品更新事件\n  uni.$on('rewardsUpdated', handleRewardsUpdate);\n});\n\n// 在组件销毁时清除事件监听\nonUnmounted(() => {\n  uni.$off('userPointsUpdated', handlePointsUpdate);\n  uni.$off('rewardsUpdated', handleRewardsUpdate);\n});\n\n// 监听商品更新事件\nconst handleRewardsUpdate = (updateData) => {\n  console.log('商城页面收到商品更新事件:', updateData);\n  hasUpdates.value = true;\n  showUpdateTip.value = true;\n};\n\n// 监听积分更新事件\nconst handlePointsUpdate = (pointsData) => {\n  if (pointsData && typeof pointsData.points !== 'undefined') {\n    console.log('商城页面收到积分更新事件:', pointsData);\n    userPoints.value = pointsData.points;\n  }\n};\n\n// 加载用户积分\nconst loadUserPoints = async (force = false) => {\n  try {\n    // 首先尝试从本地存储获取积分\n    try {\n      const pointsStr = uni.getStorageSync('user_points');\n      if (!force && pointsStr) {\n        const points = parseInt(pointsStr);\n        console.log('从本地存储获取积分:', points);\n        \n        userPoints.value = points;\n        console.log('从本地存储设置用户积分:', userPoints.value);\n        \n        // 保存到本地缓存，同步到其他组件\n        updatePointsCache({ points });\n        \n        return;\n      }\n    } catch (localError) {\n      console.error('从本地存储获取积分失败:', localError);\n    }\n    \n    // 使用优化后的服务函数获取用户积分\n    const result = await getUserPoints(force);\n    \n    console.log('获取积分结果:', result);\n    \n    if (result && result.success && result.data) {\n      userPoints.value = result.data.points || 0;\n      console.log('用户积分:', userPoints.value);\n      \n      // 保存到本地存储，确保一致性\n      try {\n        uni.setStorageSync('user_points', userPoints.value.toString());\n      } catch (e) {\n        console.error('保存积分到本地存储失败:', e);\n      }\n    } else {\n      console.warn('获取积分失败，使用默认值或上次的值:', result?.message);\n      \n      // 如果未设置过积分，则使用默认值\n      if (userPoints.value === undefined) {\n        userPoints.value = 1000;\n        \n        // 保存默认积分到本地存储\n        try {\n          uni.setStorageSync('user_points', '1000');\n        } catch (e) {\n          console.error('保存默认积分到本地存储失败:', e);\n        }\n      }\n    }\n  } catch (error) {\n    console.error('获取积分失败，使用默认值:', error);\n    // 如果未设置过积分，则使用默认值\n    if (userPoints.value === undefined) {\n      userPoints.value = 1000;\n      \n      // 保存默认积分到本地存储\n      try {\n        uni.setStorageSync('user_points', '1000');\n      } catch (e) {\n        console.error('保存默认积分到本地存储失败:', e);\n      }\n    }\n  }\n};\n\n// 加载收货地址\nconst loadAddresses = async () => {\n  try {\n    const { result } = await uniCloud.callFunction({\n      name: 'getAddresses'\n    });\n    \n    if (result && result.success) {\n      addresses.value = result.data || [];\n      \n      if (result.default_address) {\n        selectedAddress.value = result.default_address;\n        // 找出默认地址的索引\n        selectedAddressIndex.value = addresses.value.findIndex(addr => addr._id === result.default_address._id);\n        if (selectedAddressIndex.value < 0) selectedAddressIndex.value = 0;\n      } else if (addresses.value.length > 0) {\n        selectedAddress.value = addresses.value[0];\n      }\n      \n      // 如果地址被更新了，且兑换弹窗是打开的，重新显示弹窗\n      if (addressChanged.value && redemptionPopup.value) {\n        addressChanged.value = false;\n        if (addresses.value.length > 0) {\n          setTimeout(() => {\n            selectedAddress.value = addresses.value[0];\n            redemptionPopup.value.open();\n          }, 500);\n        }\n      }\n    }\n  } catch (error) {\n    console.error('获取地址失败', error);\n  }\n};\n\n// 加载所有商品\nconst loadAllRewards = async () => {\n  try {\n    // 从profile页面获取用户信息\n    const currentUser = getCurrentUserFromProfile();\n    let userId = currentUser && currentUser._id ? currentUser._id : null;\n    \n    const { result } = await uniCloud.callFunction({\n      name: 'getRewards',\n      data: { \n        userId,\n        userPoints: userPoints.value\n      }\n    });\n    \n    if (result && result.success) {\n      // 确保每个商品的库存数量和图片路径是正确的\n      allRewards.value = (result.data || []).map(reward => {\n        const safeReward = ensureStockQuantity(reward);\n        \n        // 确保图片路径格式正确\n        if (safeReward.image_url) {\n          safeReward.image_url = formatImageUrl(safeReward.image_url);\n        }\n        if (safeReward.image) {\n          safeReward.image = formatImageUrl(safeReward.image);\n        }\n        \n        return safeReward;\n      });\n      \n      // 打印图片路径调试信息\n      allRewards.value.forEach(reward => {\n        console.log(`商品[${reward.name}]图片路径: ${reward.image_url}`);\n      });\n      \n      // 对商品进行分类\n      categorizeRewards();\n    }\n  } catch (error) {\n    console.error('获取所有商品失败', error);\n  }\n};\n\n// 加载热门商品\nconst loadHotRewards = async () => {\n  try {\n    // 从profile页面获取用户信息\n    const currentUser = getCurrentUserFromProfile();\n    let userId = currentUser && currentUser._id ? currentUser._id : null;\n    \n    const hotResult = await uniCloud.callFunction({\n      name: 'getHotRewards',\n      data: { \n        userId,\n        userPoints: userPoints.value\n      }\n    });\n    \n    if (hotResult.result && hotResult.result.success) {\n      // 确保每个热门商品的库存数量和图片路径是正确的\n      hotRewards.value = (hotResult.result.data || []).map(reward => {\n        const safeReward = ensureStockQuantity(reward);\n        \n        // 确保图片路径格式正确\n        if (safeReward.image_url) {\n          safeReward.image_url = formatImageUrl(safeReward.image_url);\n        }\n        if (safeReward.image) {\n          safeReward.image = formatImageUrl(safeReward.image);\n        }\n        \n        safeReward.is_hot = true; // 确保标记为热门\n        return safeReward;\n      });\n      \n      // 对商品进行分类\n      categorizeRewards();\n    }\n  } catch (error) {\n    console.error('获取热门商品失败', error);\n  }\n};\n\n// 分离限时商品加载，以便单独调用\nconst loadLimitedTimeRewards = async () => {\n  try {\n    // 从profile页面获取用户信息\n    const currentUser = getCurrentUserFromProfile();\n    let userId = currentUser && currentUser._id ? currentUser._id : null;\n    \n    const limitedResult = await uniCloud.callFunction({\n      name: 'getLimitedTimeRewards',\n      data: { \n        userId,\n        userPoints: userPoints.value\n      }\n    });\n    \n    if (limitedResult.result && limitedResult.result.success) {\n      // 确保每个限时商品的库存数量和图片路径是正确的\n      limitedTimeRewards.value = (limitedResult.result.data || []).map(reward => {\n        const safeReward = ensureStockQuantity(reward);\n        \n        // 确保图片路径格式正确\n        if (safeReward.image_url) {\n          safeReward.image_url = formatImageUrl(safeReward.image_url);\n        }\n        if (safeReward.image) {\n          safeReward.image = formatImageUrl(safeReward.image);\n        }\n        \n        safeReward.is_limited = true; // 确保标记为限时\n        return safeReward;\n      });\n      \n      // 对商品进行分类\n      categorizeRewards();\n      \n      // 打印调试信息\n      limitedTimeRewards.value.forEach(reward => {\n        console.log(`限时商品[${reward.name}]图片路径: ${reward.image_url}`);\n      });\n    }\n  } catch (error) {\n    console.error('获取限时商品失败', error);\n  }\n};\n\n// 分类商品函数\nconst categorizeRewards = () => {\n  // 先将所有商品整合到一起以便分类\n  const allRewardsMap = new Map();\n  \n  // 添加所有普通商品\n  allRewards.value.forEach(reward => {\n    allRewardsMap.set(reward._id, { ...reward });\n  });\n  \n  // 添加热门商品，标记为热门\n  hotRewards.value.forEach(reward => {\n    allRewardsMap.set(reward._id, { ...reward, is_hot: true });\n  });\n  \n  // 添加限时商品，标记为限时\n  limitedTimeRewards.value.forEach(reward => {\n    allRewardsMap.set(reward._id, { ...reward, is_limited: true, is_limited_time: true });\n  });\n  \n  // 根据属性进行分类\n  regularRewards.value = [];\n  hotRewards.value = [];\n  limitedTimeRewards.value = [];\n  \n  allRewardsMap.forEach(reward => {\n    // 先判断限时，优先级最高\n    if (reward.is_limited === true || reward.is_limited_time === true) {\n      limitedTimeRewards.value.push(reward);\n    }\n    // 再判断热门\n    else if (reward.is_hot === true) {\n      hotRewards.value.push(reward);\n    }\n    // 最后是普通商品\n    else {\n      regularRewards.value.push(reward);\n    }\n  });\n  \n  // 对商品列表内部按照积分和库存再次排序\n  const sortByPointsAndStock = (a, b) => {\n    const aPoints = a.required_points || a.points || 0;\n    const bPoints = b.required_points || b.points || 0;\n    \n    // 先按积分从低到高排序\n    if (aPoints !== bPoints) {\n      return aPoints - bPoints;\n    }\n    \n    // 积分相同，按库存从高到低排序\n    const aStock = a.stock_quantity || a.stock || 0;\n    const bStock = b.stock_quantity || b.stock || 0;\n    return bStock - aStock;\n  };\n  \n  limitedTimeRewards.value.sort(sortByPointsAndStock);\n  hotRewards.value.sort(sortByPointsAndStock);\n  regularRewards.value.sort(sortByPointsAndStock);\n  \n  console.log(`商品分类完成: 限时(${limitedTimeRewards.value.length}), 热门(${hotRewards.value.length}), 普通(${regularRewards.value.length})`);\n};\n\n// 统一加载所有商品，然后进行分类\nconst loadRewards = async () => {\n  try {\n    await Promise.all([\n      loadAllRewards(),\n      loadHotRewards(),\n      loadLimitedTimeRewards()\n    ]);\n    \n    // 对所有商品进行分类\n    categorizeRewards();\n  } catch (error) {\n    console.error('加载商品数据失败:', error);\n  }\n};\n\n// 加载兑换记录数量\nconst loadRedemptionCount = async () => {\n  try {\n    // 从profile页面获取用户信息\n    const currentUser = getCurrentUserFromProfile();\n    let userId = currentUser && currentUser._id ? currentUser._id : null;\n    console.log('从profile获取的用户ID (兑换记录):', userId);\n    \n    const { result } = await uniCloud.callFunction({\n      name: 'getUserRedemptions',\n      data: { userId }\n    });\n    \n    if (result && result.success) {\n      redemptionCount.value = (result.data || []).length;\n    }\n  } catch (error) {\n    console.error('获取兑换记录数量失败', error);\n  }\n};\n\n// 确认兑换\nconst confirmRedemption = (reward) => {\n  // 确保reward和stock_quantity是安全的\n  const safeReward = ensureStockQuantity(reward);\n  selectedReward.value = safeReward;\n  \n  // 如果没有地址，先去添加地址\n  if (addresses.value.length === 0) {\n    goToAddAddress();\n    return;\n  }\n  \n  redemptionPopup.value.open();\n};\n\n// 地址选择变化\nconst addressChange = (e) => {\n  selectedAddressIndex.value = e.detail.value;\n  selectedAddress.value = addresses.value[selectedAddressIndex.value];\n};\n\n// 关闭弹窗\nconst closePopup = () => {\n  redemptionPopup.value.close();\n};\n\n// 关闭结果弹窗\nconst closeResultPopup = () => {\n  resultPopup.value.close();\n  // 刷新数据\n  loadUserPoints(true); // 强制从服务器刷新积分\n  loadRewards(); // 使用新的统一加载函数\n  loadRedemptionCount();\n};\n\n// 前往添加地址页面\nconst goToAddAddress = () => {\n  uni.navigateTo({\n    url: '/pages/profile/address-edit'\n  });\n};\n\n// 兑换奖品\nconst redeemReward = async () => {\n  if (!selectedAddress.value) {\n    resultMessage.value = '请选择收货地址';\n    redemptionPopup.value.close();\n    resultPopup.value.open();\n    return;\n  }\n  \n  isRedeeming.value = true;\n  \n  try {\n    // 使用固定的默认用户ID\n    const userId = '10086420';\n    console.log('兑换商品使用用户ID:', userId);\n    \n    // 添加随机延迟，避免过快操作\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // 获取参数信息\n    const rewardId = selectedReward.value._id;\n    const addressId = selectedAddress.value._id;\n    const pointsRequired = selectedReward.value.required_points || selectedReward.value.points || 0;\n    \n    // 确认商品可兑换状态\n    if (selectedReward.value.status !== 'available') {\n      console.error('商品状态不可兑换:', selectedReward.value.status);\n      redemptionPopup.value.close();\n      resultMessage.value = selectedReward.value.status === 'unavailable' ? '积分不足' : '商品已售罄';\n      resultPopup.value.open();\n      isRedeeming.value = false;\n      return;\n    }\n    \n    // 再次确认库存\n    const currentStock = getStockQuantity(selectedReward.value);\n    console.log('兑换前再次检查库存:', currentStock);\n    if (currentStock <= 0) {\n      console.error('商品库存不足');\n      redemptionPopup.value.close();\n      resultMessage.value = '商品已售罄';\n      resultPopup.value.open();\n      isRedeeming.value = false;\n      return;\n    }\n    \n    // 保存当前状态，以便回滚\n    const originalPoints = userPoints.value;\n    const originalStock = getStockQuantity(selectedReward.value);\n    \n    // 先在本地更新UI显示\n    userPoints.value = Math.max(0, userPoints.value - pointsRequired);\n    if (selectedReward.value.stock_quantity !== undefined) {\n      selectedReward.value.stock_quantity = Math.max(0, selectedReward.value.stock_quantity - 1);\n    } else if (selectedReward.value.stock !== undefined) {\n      selectedReward.value.stock = Math.max(0, selectedReward.value.stock - 1);\n    }\n    \n    // 关闭兑换弹窗，显示处理中\n    redemptionPopup.value.close();\n    uni.showLoading({ title: '处理中...' });\n    \n    // 添加详细的请求数据日志\n    console.log('发送兑换请求:', {\n      userId,\n      rewardId,\n      addressId,\n      reward: {\n        name: selectedReward.value.name,\n        stock: selectedReward.value.stock,\n        stock_quantity: selectedReward.value.stock_quantity,\n        status: selectedReward.value.status\n      }\n    });\n    \n    // 调用直接兑换函数\n    const { result } = await uniCloud.callFunction({\n      name: 'redeemRewardDirect',\n      data: {\n        userId: userId,\n        rewardId: rewardId,\n        addressId: addressId\n      }\n    });\n    \n    uni.hideLoading();\n    console.log('直接兑换结果:', result);\n    \n    if (result && result.success) {\n      // 使用服务器返回的数据更新本地状态\n      if (result.data && result.data.remaining_points !== undefined) {\n        userPoints.value = result.data.remaining_points;\n        \n        // 更新积分缓存，这会自动广播到其他页面\n        updatePointsCache({ points: result.data.remaining_points });\n        \n        // 更新本地存储中的积分\n        try {\n          uni.setStorageSync('user_points', result.data.remaining_points.toString());\n          console.log('兑换后更新本地积分存储:', result.data.remaining_points);\n        } catch (e) {\n          console.error('保存积分到本地存储失败:', e);\n        }\n      }\n      \n      resultMessage.value = '兑换成功';\n      resultPopup.value.open();\n      \n      // 刷新数据\n      setTimeout(() => {\n        loadUserPoints(true); // 强制从服务器刷新积分\n        loadRewards();\n        loadRedemptionCount();\n      }, 1000);\n    } else {\n      // 如果服务器端兑换失败，回滚本地状态\n      userPoints.value = originalPoints;\n      if (selectedReward.value.stock_quantity !== undefined) {\n        selectedReward.value.stock_quantity = originalStock;\n      } else if (selectedReward.value.stock !== undefined) {\n        selectedReward.value.stock = originalStock;\n      }\n      \n      resultMessage.value = result?.message || '兑换失败，请稍后重试';\n      resultPopup.value.open();\n      \n      // 立即刷新数据，确保显示正确的状态\n      setTimeout(() => {\n        loadRewards();\n      }, 500);\n    }\n    \n    isRedeeming.value = false;\n  } catch (error) {\n    console.error('兑换过程中发生错误:', error);\n    uni.hideLoading();\n    \n    isRedeeming.value = false;\n    resultMessage.value = '兑换失败，请稍后重试';\n    resultPopup.value.open();\n    \n    // 刷新数据\n    setTimeout(() => {\n      loadUserPoints(true); // 强制从服务器刷新积分\n      loadRewards();\n      loadRedemptionCount();\n    }, 1000);\n  }\n};\n\n// 下拉刷新处理\nconst onRefresh = async () => {\n  refreshing.value = true;\n  try {\n    await refreshData();\n  } finally {\n    setTimeout(() => {\n      refreshing.value = false;\n    }, 500); // 确保刷新动画至少显示500ms\n  }\n};\n\n// 强制刷新\nconst forceRefresh = async () => {\n  loading.value = true;\n  await refreshData();\n  loading.value = false;\n};\n\n// 刷新数据\nconst refreshData = async () => {\n  // 重置更新提示\n  showUpdateTip.value = false;\n  hasUpdates.value = false;\n  \n  try {\n    // 刷新所有数据\n    await loadUserPoints(true);\n    await loadRewards();\n    await loadAddresses();\n    await loadRedemptionCount();\n    \n    // 显示刷新成功消息\n    uni.showToast({\n      title: '刷新成功',\n      icon: 'success',\n      duration: 1500\n    });\n  } catch (error) {\n    console.error('刷新数据失败:', error);\n    uni.showToast({\n      title: '刷新失败，请稍后再试',\n      icon: 'none',\n      duration: 2000\n    });\n  }\n};\n\n// 滚动到底部加载更多\nconst onLoadMore = () => {\n  // 目前只是预留的方法，如果需要分页加载可以在这里实现\n  console.log('滚动到底部，可以加载更多');\n};\n\n// 图片加载错误处理\nconst handleImageError = (e) => {\n  // 获取当前src\n  const originalSrc = e.target.src;\n  console.log('图片加载失败:', originalSrc);\n  \n  // 尝试修复路径\n  try {\n    let newSrc = originalSrc;\n    \n    // 如果是相对路径但没有前导斜杠，添加斜杠\n    if (originalSrc && !originalSrc.startsWith('/') && !originalSrc.startsWith('http')) {\n      newSrc = '/' + originalSrc;\n      console.log('尝试添加前导斜杠修复路径:', newSrc);\n    }\n    // 如果路径有两个斜杠，删除一个\n    else if (originalSrc && originalSrc.startsWith('//')) {\n      newSrc = originalSrc.substring(1);\n      console.log('尝试移除多余斜杠修复路径:', newSrc);\n    }\n    \n    // 如果修复的路径与原路径不同，尝试使用新路径\n    if (newSrc !== originalSrc) {\n      e.target.src = newSrc;\n      return; // 尝试用新路径加载\n    }\n  } catch (error) {\n    console.error('修复图片路径失败:', error);\n  }\n  \n  // 如果修复失败或者路径已经是最佳格式，使用默认图片\n  e.target.src = '/static/images/mall/default-product.png';\n  console.log('使用默认图片替换');\n};\n</script>\n\n<style>\n.container {\n  background-color: #f8f9fa;\n  font-family: \"PingFang SC\", \"Helvetica Neue\", Arial, sans-serif;\n  color: #333;\n  padding-bottom: 80px;\n}\n\n.card {\n  border-radius: 16px;\n  overflow: hidden;\n}\n\n.product-card {\n  border-radius: 16px;\n  overflow: hidden;\n  background-color: white;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n}\n\n.product-img-container {\n  position: relative;\n  width: 100%;\n  height: 120px;\n  overflow: hidden;\n}\n\n.product-img-container-lg {\n  position: relative;\n  width: 96px;\n  height: 96px;\n  overflow: hidden;\n}\n\n.line-clamp-2 {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.category-btn {\n  border-radius: 24px;\n  padding: 6px 14px;\n  font-size: 14px;\n  background-color: #f1f9f2;\n  color: #4CAF50;\n  display: inline-block;\n}\n\n.category-btn.active {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.point-tag {\n  border-radius: 12px 0 12px 0;\n  background-color: rgba(76, 175, 80, 0.9);\n  color: white;\n  padding: 3px 10px;\n  font-size: 12px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 1;\n}\n\n.stock-tag {\n  background-color: #FDF6E3;\n  color: #F5A623;\n  border-radius: 10px;\n  padding: 1px 6px;\n  font-size: 10px;\n  display: inline-block;\n}\n\n.progress-bar {\n  height: 4px;\n  border-radius: 2px;\n  background-color: #e9ecef;\n  overflow: hidden;\n}\n\n.progress {\n  height: 100%;\n  border-radius: 2px;\n  background-color: #4CAF50;\n}\n\n.btn-exchange {\n  background-color: #4CAF50;\n  color: white;\n  border-radius: 20px;\n  padding: 6px 14px;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.btn-exchange-small {\n  background-color: #4CAF50;\n  color: white;\n  border-radius: 20px;\n  padding: 4px 12px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.btn-exchange-disabled {\n  background-color: #e9ecef;\n  color: #adb5bd;\n  border-radius: 20px;\n  padding: 6px 14px;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.btn-exchange-disabled-small {\n  background-color: #e9ecef;\n  color: #adb5bd;\n  border-radius: 20px;\n  padding: 4px 12px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.btn-confirm {\n  background-color: #4CAF50;\n  color: white;\n  border-radius: 20px;\n  padding: 6px 14px;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.btn-cancel {\n  background-color: #f1f3f5;\n  color: #495057;\n  border-radius: 20px;\n  padding: 6px 14px;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.product-image {\n  width: 96px;\n  height: 96px;\n  border-radius: 8px;\n  object-fit: cover;\n}\n\n.product-img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.grid-2 {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 16px;\n}\n\n.badge-dot {\n  position: absolute;\n  top: -4px;\n  right: -4px;\n  width: 16px;\n  height: 16px;\n  background-color: #ef4444;\n  border-radius: 50%;\n  color: white;\n  font-size: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.space-left {\n  margin-left: 12px;\n}\n\n/* 工具类 */\n.px-4 { padding-left: 16px; padding-right: 16px; }\n.pt-10 { padding-top: 40px; }\n.pb-4 { padding-bottom: 16px; }\n.py-4 { padding-top: 16px; padding-bottom: 16px; }\n.py-3 { padding-top: 12px; padding-bottom: 12px; }\n.py-2 { padding-top: 8px; padding-bottom: 8px; }\n.py-1 { padding-top: 4px; padding-bottom: 4px; }\n.p-4 { padding: 16px; }\n.p-3 { padding: 12px; }\n.p-2 { padding: 8px; }\n.px-3 { padding-left: 12px; padding-right: 12px; }\n.px-4 { padding-left: 16px; padding-right: 16px; }\n.px-6 { padding-left: 24px; padding-right: 24px; }\n.pb-2 { padding-bottom: 8px; }\n.pr-10 { padding-right: 40px; }\n\n.mb-6 { margin-bottom: 24px; }\n.mb-4 { margin-bottom: 16px; }\n.mb-3 { margin-bottom: 12px; }\n.mb-2 { margin-bottom: 8px; }\n.mb-1 { margin-bottom: 4px; }\n.mr-5 { margin-right: 20px; }\n.mr-4 { margin-right: 16px; }\n.mr-2 { margin-right: 8px; }\n.mr-1 { margin-right: 4px; }\n.ml-4 { margin-left: 16px; }\n.ml-3 { margin-left: 12px; }\n.ml-2 { margin-left: 8px; }\n.ml-1 { margin-left: 4px; }\n.ml-auto { margin-left: auto; }\n.my-3 { margin-top: 12px; margin-bottom: 12px; }\n\n.bg-white { background-color: #ffffff; }\n.bg-gray-100 { background-color: #f3f4f6; }\n.bg-green-50 { background-color: #f0fdf4; }\n\n.text-2xl { font-size: 24px; }\n.text-xl { font-size: 20px; }\n.text-lg { font-size: 18px; }\n.text-sm { font-size: 14px; }\n.text-xs { font-size: 12px; }\n\n.font-bold { font-weight: 700; }\n.font-semibold { font-weight: 600; }\n.font-medium { font-weight: 500; }\n\n.text-gray-400 { color: #9ca3af; }\n.text-gray-500 { color: #6b7280; }\n.text-green-500 { color: #4CAF50; }\n.text-red-500 { color: #ef4444; }\n.text-blue-500 { color: #3b82f6; }\n.text-center { text-align: center; }\n\n.flex { display: flex; }\n.flex-grow { flex-grow: 1; }\n.flex-shrink-0 { flex-shrink: 0; }\n.items-center { align-items: center; }\n.items-baseline { align-items: baseline; }\n.justify-between { justify-content: space-between; }\n.self-center { align-self: center; }\n.block { display: block; }\n\n.border-b { border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #e5e7eb; }\n\n.rounded-full { border-radius: 9999px; }\n.rounded-lg { border-radius: 8px; }\n.rounded { border-radius: 4px; }\n\n.gap-4 { gap: 16px; }\n\n.relative { position: relative; }\n.absolute { position: absolute; }\n.top-0 { top: 0; }\n.right-0 { right: 0; }\n\n.whitespace-nowrap { white-space: nowrap; }\n\n.object-cover { object-fit: cover; }\n\n.w-full { width: 100%; }\n.w-16 { width: 64px; }\n.h-16 { height: 64px; }\n\n/* 搜索相关样式 */\n.search-container {\n  margin-bottom: 10px;\n  width: 100%;\n}\n\n.search-input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n  background-color: #f0f0f0;\n  border-radius: 20px;\n  padding: 0;\n  height: 36px;\n  box-sizing: border-box;\n}\n\n.search-input {\n  flex: 1;\n  height: 36px;\n  background-color: transparent;\n  border-radius: 20px;\n  padding-left: 40px;\n  padding-right: 15px;\n  font-size: 14px;\n  color: #666;\n  box-sizing: border-box;\n}\n\n.search-input::placeholder {\n  color: #999;\n  font-size: 14px;\n}\n\n.search-icon {\n  position: absolute;\n  left: 15px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 16px;\n  height: 16px;\n  opacity: 0.5;\n}\n\n.clear-icon {\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 16px;\n  height: 16px;\n}\n\n.search-status {\n  background-color: #f8f9fa;\n  padding: 8px;\n  border-radius: 8px;\n}\n\n/* 添加新的样式 */\n.mall-content {\n  height: calc(100vh - 120px);\n  position: relative;\n}\n\n.update-tip {\n  background-color: rgba(76, 175, 80, 0.1);\n  padding: 10px;\n  text-align: center;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.update-tip-text {\n  color: #4CAF50;\n  font-size: 14px;\n}\n\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 0;\n}\n\n.loading-spinner {\n  width: 24px;\n  height: 24px;\n  border: 2px solid rgba(76, 175, 80, 0.2);\n  border-top: 2px solid #4CAF50;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-bottom: 10px;\n}\n\n.loading-text {\n  color: #666;\n  font-size: 14px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n</style> ","import MiniProgramPage from 'D:/Documents/HBuilderProjects/CarbonFootprint/pages/mall/mall.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","computed","ensureStockQuantity","uni","searchRewards","onMounted","onUnmounted","updatePointsCache","getUserPoints","uniCloud","getCurrentUserFromProfile","MiniProgramPage"],"mappings":"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"}