{"version":3,"file":"address-edit.js","sources":["pages/profile/address-edit.vue","../../../Software/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcHJvZmlsZS9hZGRyZXNzLWVkaXQudnVl"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- 顶部导航栏 -->\n    <view class=\"header bg-green px-4 py-3\">\n      <view class=\"flex items-center\">\n        <view @tap=\"goBack\">\n          <icon-image name=\"back\" size=\"22\" color=\"#FFFFFF\"></icon-image>\n        </view>\n        <view class=\"flex-1 text-center\">\n          <text class=\"text-white text-lg font-medium\">{{isEdit ? '编辑地址' : '新增地址'}}</text>\n        </view>\n        <view class=\"w-24px\"></view> <!-- 为了居中标题的占位 -->\n      </view>\n    </view>\n    \n    <!-- 地址表单 -->\n    <view class=\"address-form mt-3\">\n      <!-- 收货人 -->\n      <view class=\"form-item\">\n        <text class=\"form-label\">收货人</text>\n        <input v-model=\"addressForm.receiver\" placeholder=\"请输入收货人姓名\" class=\"form-input\" />\n      </view>\n      \n      <!-- 手机号码 -->\n      <view class=\"form-item\">\n        <text class=\"form-label\">手机号码</text>\n        <input v-model=\"addressForm.phone\" type=\"number\" maxlength=\"11\" placeholder=\"请输入收货人手机号\" class=\"form-input\" />\n      </view>\n      \n      <!-- 所在地区 -->\n      <view class=\"form-item\">\n        <text class=\"form-label\">所在地区</text>\n        <picker mode=\"region\" :value=\"regionArray\" @change=\"regionChange\">\n          <view class=\"flex items-center justify-between flex-1\">\n            <text v-if=\"addressForm.add\" class=\"text-gray-700\">{{addressForm.add}}</text>\n            <text v-else class=\"text-gray-400\">请选择省/市/区(县)</text>\n            <text class=\"text-gray-400\">></text>\n          </view>\n        </picker>\n      </view>\n      \n      <!-- 详细地址 -->\n      <view class=\"form-item align-start\">\n        <text class=\"form-label\">详细地址</text>\n        <textarea v-model=\"addressForm.addall\" placeholder=\"请输入详细地址信息\" class=\"form-textarea\" />\n      </view>\n      \n      <!-- 设为默认 -->\n      <view class=\"form-item no-border\">\n        <text class=\"form-label\">设为默认地址</text>\n        <view class=\"flex-1 flex items-center\" @click=\"toggleDefault\">\n          <view class=\"check-icon-wrapper mr-2\">\n            <icon-image v-if=\"addressForm.isDefault\" name=\"check-circle\" size=\"20\" color=\"#4CAF50\"></icon-image>\n            <icon-image v-else name=\"circle\" size=\"20\" color=\"#d1d5db\"></icon-image>\n          </view>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 保存按钮 -->\n    <view class=\"p-4 fixed-bottom\">\n      <button class=\"w-full py-3 rounded-full bg-green text-white\" @tap=\"saveAddressData\">保存并使用</button>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue';\nimport { saveAddress as saveAddressService } from '../../services/address.js';\nimport { getCurrentUserFromProfile } from '../../services/login.js';\nimport IconImage from '../../components/IconImage.vue';\n\n// 页面参数\nconst isEdit = ref(false);\nconst editIndex = ref(-1);\n\n// 表单数据\nconst addressForm = reactive({\n  _id: '',\n  receiver: '',\n  phone: '',\n  add: '',        // 所在地区\n  addall: '',     // 详细地址\n  isDefault: false\n});\n\n// 地区数组，用于地区选择器\nconst regionArray = ref(['', '', '']);\n\n// 是否从商城页面跳转过来\nconst fromMall = ref(false);\n\n// 返回上一页\nconst goBack = () => {\n  uni.navigateBack();\n};\n\n// 地区改变事件\nconst regionChange = (e) => {\n  const regions = e.detail.value;\n  regionArray.value = regions;\n  addressForm.add = regions.join(' ');\n};\n\n// 切换默认地址状态\nconst toggleDefault = () => {\n  addressForm.isDefault = !addressForm.isDefault;\n};\n\n// 保存地址\nconst saveAddressData = async () => {\n  // 打印当前表单数据\n  console.log('提交前的表单数据:', JSON.parse(JSON.stringify(addressForm)));\n  \n  // 简单表单验证\n  if (!addressForm.receiver.trim()) {\n    return uni.showToast({ title: '请输入收货人姓名', icon: 'none' });\n  }\n  if (!addressForm.phone.trim() || addressForm.phone.length !== 11) {\n    return uni.showToast({ title: '请输入正确的手机号码', icon: 'none' });\n  }\n  if (!addressForm.add) {\n    return uni.showToast({ title: '请选择所在地区', icon: 'none' });\n  }\n  if (!addressForm.addall.trim()) {\n    return uni.showToast({ title: '请输入详细地址', icon: 'none' });\n  }\n\n  // 显示加载\n  uni.showLoading({ title: '保存中...' });\n  \n  try {\n    // 构建要保存的地址数据\n    const addressData = {\n      _id: isEdit.value ? addressForm._id : undefined,\n      receiver: addressForm.receiver,\n      phone: addressForm.phone,\n      add: addressForm.add,\n      addall: addressForm.addall,\n      isDefault: addressForm.isDefault,\n      name: addressForm.receiver,  // 兼容字段\n      address: addressForm.addall, // 兼容字段\n      region: addressForm.add,     // 兼容字段\n      is_default: addressForm.isDefault // 兼容字段\n    };\n    \n    console.log('要保存的地址数据:', addressData);\n    \n    // 使用服务保存地址\n    await saveAddressService(addressData, isEdit.value);\n    \n    uni.hideLoading();\n    uni.showToast({\n      title: isEdit.value ? '修改成功' : '添加成功',\n      icon: 'success',\n      duration: 1500,\n      success: () => {\n        // 通知地址已更新\n        uni.$emit('addressUpdated');\n        \n        setTimeout(() => {\n          uni.navigateBack({\n            delta: 1,\n            success: () => {\n              // 如果是从商城页面跳转过来，额外通知\n              if (fromMall.value) {\n                // 这里不需要额外操作，因为我们已经使用了uni.$emit\n              }\n            }\n          });\n        }, 500);\n      }\n    });\n  } catch (error) {\n    uni.hideLoading();\n    uni.showToast({\n      title: error.message || '保存失败',\n      icon: 'none'\n    });\n    console.error('保存地址失败：', error);\n  }\n};\n\n// 直接解析URL参数获取地址信息\nconst getAddressFromUrl = () => {\n  try {\n    const pages = getCurrentPages();\n    const page = pages[pages.length - 1];\n    if (page && page.$page && page.$page.fullPath) {\n      const fullPath = page.$page.fullPath;\n      console.log('当前页面路径:', fullPath);\n      \n      // 解析URL参数\n      const urlParams = new URLSearchParams(fullPath.split('?')[1]);\n      const addressParam = urlParams.get('address');\n      console.log('URL中的address参数:', addressParam ? '...(数据太长省略)' : undefined);\n      \n      if (addressParam) {\n        const decodedAddress = decodeURIComponent(addressParam);\n        console.log('解码后的地址数据长度:', decodedAddress.length);\n        return JSON.parse(decodedAddress);\n      }\n    }\n  } catch (e) {\n    console.error('从URL解析地址数据失败:', e);\n  }\n  return null;\n};\n\nonMounted(() => {\n  console.log('地址编辑页面加载');\n  \n  // 尝试从本地存储获取地址数据\n  const storedAddress = uni.getStorageSync('edit_address_data');\n  if (storedAddress) {\n    console.log('从本地存储获取到地址数据:', storedAddress);\n    \n    isEdit.value = true;\n    \n    // 填充表单\n    addressForm._id = storedAddress._id || '';\n    addressForm.receiver = storedAddress.receiver || storedAddress.name || '';\n    addressForm.phone = storedAddress.phone || '';\n    addressForm.add = storedAddress.add || storedAddress.region || '';\n    addressForm.addall = storedAddress.addall || storedAddress.address || '';\n    addressForm.isDefault = storedAddress.isDefault || false;\n    \n    console.log('填充后的表单数据:', JSON.parse(JSON.stringify(addressForm)));\n    \n    // 设置地区数组\n    if (addressForm.add) {\n      regionArray.value = addressForm.add.split(' ');\n      console.log('设置后的地区数组:', regionArray.value);\n    }\n    \n    // 使用后清除本地存储\n    uni.removeStorageSync('edit_address_data');\n    \n    return;\n  }\n  \n  // 尝试从URL参数获取地址信息\n  const addressData = getAddressFromUrl();\n  if (addressData) {\n    console.log('从URL成功解析地址数据:', addressData);\n    \n    isEdit.value = true;\n    \n    // 填充表单\n    addressForm._id = addressData._id || '';\n    addressForm.receiver = addressData.receiver || addressData.name || '';\n    addressForm.phone = addressData.phone || '';\n    addressForm.add = addressData.add || addressData.region || '';\n    addressForm.addall = addressData.addall || addressData.address || '';\n    addressForm.isDefault = addressData.isDefault || false;\n    \n    console.log('填充后的表单数据:', JSON.parse(JSON.stringify(addressForm)));\n    \n    // 设置地区数组\n    if (addressForm.add) {\n      regionArray.value = addressForm.add.split(' ');\n      console.log('设置后的地区数组:', regionArray.value);\n    }\n    \n    return;\n  }\n  \n  const pages = getCurrentPages();\n  const currentPage = pages[pages.length - 1];\n  \n  // 获取页面参数\n  if (currentPage && currentPage.$page && currentPage.$page.options) {\n    const { address, index, from } = currentPage.$page.options;\n    \n    console.log('获取到页面参数:', { address: address ? '...(数据太长省略)' : undefined, index, from });\n    \n    // 检查是否从商城页面跳转\n    if (from === 'mall') {\n      fromMall.value = true;\n    }\n    \n    // 如果提供了索引但没有地址数据，可能是使用了本地存储但获取失败\n    if (index !== undefined && !address) {\n      isEdit.value = true;\n      editIndex.value = parseInt(index);\n    }\n    \n    if (address && index !== undefined) {\n      isEdit.value = true;\n      editIndex.value = parseInt(index);\n      \n      try {\n        const addressData = JSON.parse(decodeURIComponent(address));\n        console.log('解析后的地址数据:', addressData);\n        \n        // 填充表单\n        addressForm._id = addressData._id || '';\n        addressForm.receiver = addressData.name || addressData.receiver || '';\n        addressForm.phone = addressData.phone || '';\n        addressForm.add = addressData.region || addressData.add || '';\n        addressForm.addall = addressData.address || addressData.addall || '';\n        addressForm.isDefault = addressData.isDefault || false;\n        \n        console.log('填充后的表单数据:', JSON.parse(JSON.stringify(addressForm)));\n        \n        // 设置地区数组\n        if (addressForm.add) {\n          regionArray.value = addressForm.add.split(' ');\n          console.log('设置后的地区数组:', regionArray.value);\n        }\n      } catch (e) {\n        console.error('解析地址数据出错', e);\n        uni.showToast({\n          title: '加载地址信息失败',\n          icon: 'none'\n        });\n      }\n    }\n  }\n  \n  // 如果是编辑模式但没有成功获取地址信息，尝试从数据库获取\n  if (isEdit.value && addressForm._id) {\n    uni.showLoading({ title: '加载中...' });\n    \n    uniCloud.callFunction({\n      name: 'getAddresses'\n    }).then(res => {\n      uni.hideLoading();\n      \n      if (res.result && res.result.success) {\n        const addresses = res.result.data || [];\n        const address = addresses.find(addr => addr._id === addressForm._id);\n        \n        if (address) {\n          // 根据返回的地址数据，进行字段映射\n          addressForm.receiver = address.name || address.receiver || '';\n          addressForm.phone = address.phone || '';\n          addressForm.add = address.region || address.add || '';\n          addressForm.addall = address.address || address.addall || '';\n          addressForm.isDefault = address.isDefault || address.is_default || false;\n          \n          console.log('从数据库获取的地址数据:', address);\n          console.log('更新后的表单数据:', JSON.parse(JSON.stringify(addressForm)));\n          \n          // 设置地区数组\n          if (addressForm.add) {\n            regionArray.value = addressForm.add.split(' ');\n            console.log('更新后的地区数组:', regionArray.value);\n          }\n        }\n      }\n    }).catch(err => {\n      uni.hideLoading();\n      console.error('获取地址信息失败', err);\n      uni.showToast({\n        title: '加载地址信息失败',\n        icon: 'none'\n      });\n    });\n  }\n});\n</script>\n\n<style>\n.container {\n  background-color: #f8f9fa;\n  min-height: 100vh;\n  padding-bottom: 80px;\n}\n\n.header {\n  padding-top: 44px;\n  padding-bottom: 12px;\n  box-sizing: content-box;\n}\n\n.bg-green {\n  background-color: #4CAF50;\n}\n\n.w-24px {\n  width: 24px;\n}\n\n.address-form {\n  background-color: white;\n  border-radius: 8px;\n  margin: 16px;\n}\n\n.form-item {\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.align-start {\n  align-items: flex-start;\n}\n\n.no-border {\n  border-bottom: none;\n}\n\n.form-label {\n  width: 80px;\n  font-size: 15px;\n  color: #333;\n}\n\n.form-input {\n  flex: 1;\n  font-size: 15px;\n  height: 24px;\n}\n\n.form-textarea {\n  flex: 1;\n  font-size: 15px;\n  height: 80px;\n  width: 100%;\n}\n\n.check-icon-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.fixed-bottom {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #ffffff;\n  border-top: 1px solid #f0f0f0;\n}\n\n.text-white { color: #ffffff; }\n.text-gray-400 { color: #9ca3af; }\n.text-gray-700 { color: #374151; }\n.bg-white { background-color: #ffffff; }\n\n.flex { display: flex; }\n.flex-1 { flex: 1; }\n.items-center { align-items: center; }\n.justify-between { justify-content: space-between; }\n.text-center { text-align: center; }\n\n.p-4 { padding: 16px; }\n.px-4 { padding-left: 16px; padding-right: 16px; }\n.py-3 { padding-top: 12px; padding-bottom: 12px; }\n.mr-2 { margin-right: 8px; }\n\n.mt-3 { margin-top: 12px; }\n\n.text-lg { font-size: 18px; }\n.font-medium { font-weight: 500; }\n\n.rounded-full { border-radius: 9999px; }\n.w-full { width: 100%; }\n</style> ","import MiniProgramPage from 'D:/Documents/HBuilderProjects/CarbonFootprint/pages/profile/address-edit.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","reactive","uni","saveAddressService","onMounted","addressData","uniCloud","MiniProgramPage"],"mappings":"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"}