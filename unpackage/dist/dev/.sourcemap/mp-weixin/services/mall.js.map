{"version":3,"file":"mall.js","sources":["services/mall.js"],"sourcesContent":["// 积分商城服务\nimport { getCurrentUserFromProfile } from './login.js';\nimport { getUserPoints as getPoints, updatePointsCache } from './points.js';\n\n/**\n * 搜索奖品\n * @param {string} query 搜索关键词\n * @param {Object} options 查询参数\n * @returns {Promise} 搜索结果Promise\n */\nexport const searchRewards = (query, options = {}) => {\n  return new Promise(async (resolve) => {\n    try {\n      // 获取当前用户ID\n      const currentUser = getCurrentUserFromProfile();\n      let userId = currentUser && currentUser._id ? currentUser._id : null;\n\n      console.log('Search rewards with query:', query, 'userId:', userId);\n\n      // 调用云函数搜索奖品\n      const { result } = await uniCloud.callFunction({\n        name: 'searchRewards',\n        data: { \n          query,\n          userId,\n          ...options\n        }\n      });\n\n      // 处理结果\n      if (result && result.success) {\n        // 确保每个奖品的库存数量是安全的\n        const safeData = (result.data || []).map(reward => ensureStockQuantity(reward));\n        \n        resolve({\n          success: true,\n          data: safeData,\n          total: result.total || 0\n        });\n      } else {\n        resolve({\n          success: false,\n          message: result?.message || '搜索失败',\n          data: []\n        });\n      }\n    } catch (error) {\n      console.error('搜索奖品失败:', error);\n      resolve({\n        success: false,\n        message: '搜索失败，请稍后重试',\n        data: []\n      });\n    }\n  });\n};\n\n/**\n * 获取用户积分\n * @param {boolean} forceRefresh 是否强制刷新\n * @returns {Promise} 用户积分Promise\n */\nexport const getUserPoints = (forceRefresh = false) => {\n  return new Promise((resolve) => {\n    try {\n      // 首先尝试从本地存储获取积分\n      const pointsStr = uni.getStorageSync('user_points');\n      if (pointsStr) {\n        const points = parseInt(pointsStr);\n        console.log('mall.js - 从本地存储获取积分:', points);\n        \n        // 更新缓存\n        updatePointsCache({ points });\n        \n        resolve({\n          success: true,\n          data: { points },\n          source: 'local'\n        });\n        return;\n      }\n      \n      // 如果本地存储中没有积分，则使用服务函数\n      getPoints(forceRefresh).then(result => {\n        // 如果从服务获取成功，立即保存到本地存储\n        if (result && result.success && result.data && result.data.points) {\n          try {\n            uni.setStorageSync('user_points', result.data.points.toString());\n            console.log('mall.js - 保存服务获取的积分到本地:', result.data.points);\n          } catch (e) {\n            console.error('保存积分到本地存储失败:', e);\n          }\n        }\n        resolve(result);\n      }).catch(err => {\n        console.error('获取积分服务失败:', err);\n        resolve({\n          success: false,\n          message: '获取积分失败',\n          data: { points: 1000 }\n        });\n      });\n    } catch (error) {\n      console.error('获取用户积分失败:', error);\n      resolve({\n        success: false,\n        message: '获取积分失败，使用默认值',\n        data: { points: 1000 }\n      });\n    }\n  });\n};\n\n/**\n * 确保奖品库存数量是安全的数字\n * @param {Object} reward 奖品对象\n * @returns {Object} 处理后的奖品对象\n */\nexport const ensureStockQuantity = (reward) => {\n  if (!reward) return {};\n  \n  // 创建一个副本，避免修改原对象\n  const safeReward = { ...reward };\n  \n  // 打印原始数据，便于调试\n  console.log('原始商品数据库存信息:', {\n    name: safeReward.name,\n    stock: safeReward.stock,\n    stock_quantity: safeReward.stock_quantity,\n    status: safeReward.status\n  });\n  \n  // 适配新旧字段名\n  if (safeReward.stock !== undefined && safeReward.stock_quantity === undefined) {\n    safeReward.stock_quantity = safeReward.stock;\n  }\n  \n  // 适配积分字段\n  if (safeReward.points !== undefined && safeReward.required_points === undefined) {\n    safeReward.required_points = safeReward.points;\n  }\n  \n  // 适配图片字段\n  if (safeReward.image !== undefined && safeReward.image_url === undefined) {\n    safeReward.image_url = safeReward.image;\n  }\n  \n  // 确保stock_quantity是数字 - 更严格的转换\n  let stockQuantity = 0;\n  if (safeReward.stock_quantity !== undefined && safeReward.stock_quantity !== null) {\n    // 尝试更严格的数字转换\n    const parsedStock = Number(safeReward.stock_quantity);\n    stockQuantity = !isNaN(parsedStock) ? parsedStock : 0;\n    safeReward.stock_quantity = stockQuantity;\n  }\n  \n  // 确保原始stock字段也是数字\n  if (safeReward.stock !== undefined && safeReward.stock !== null) {\n    const parsedStock = Number(safeReward.stock);\n    const stockValue = !isNaN(parsedStock) ? parsedStock : 0;\n    safeReward.stock = stockValue;\n    \n    // 如果stock_quantity未定义，使用stock的值\n    if (safeReward.stock_quantity === undefined) {\n      safeReward.stock_quantity = stockValue;\n      stockQuantity = stockValue;\n    }\n  }\n  \n  // 适配状态字段\n  if (safeReward.status === 'sold_out') {\n    safeReward.status = 'soldout'; // 适配前端识别的状态名\n  }\n  \n  // 如果库存是0或负数，确保状态设置为已售罄\n  if (stockQuantity <= 0 && safeReward.status !== 'unavailable') {\n    safeReward.status = 'soldout';\n    console.log(`商品[${safeReward.name}]库存为0，设置状态为已售罄`);\n  }\n  \n  // 如果status是已售罄，但库存大于0，保持库存值但更新显示状态\n  if ((safeReward.status === 'soldout' || safeReward.status === 'sold_out') && stockQuantity > 0) {\n    console.log(`警告: 商品[${safeReward.name}]状态为已售罄，但库存为${stockQuantity}`);\n    // 不修改库存，但确保状态一致\n  }\n  \n  console.log('处理后商品数据库存信息:', {\n    name: safeReward.name,\n    stock: safeReward.stock,\n    stock_quantity: safeReward.stock_quantity,\n    status: safeReward.status\n  });\n  \n  return safeReward;\n}; \n\n/**\n * 获取所有商品\n * @returns {Promise<Array>} 商品列表Promise\n */\nexport const getAllRewards = async () => {\n  try {\n    // 验证管理员登录状态\n    const adminLoginStatus = uni.getStorageSync('admin_login_status');\n    if (adminLoginStatus !== 'loggedin') {\n      console.warn('管理员未登录，但仍尝试获取商品列表');\n      // 不直接抛出错误，让调用者决定是否需要跳转\n    }\n    \n    const { result } = await uniCloud.callFunction({\n      name: 'getRewards',\n      data: { showAll: true }\n    });\n\n    if (result && result.success) {\n      // 确保图片路径正确\n      const rewards = result.data.map(reward => {\n        // 提取image_url，确保其存在\n        let imageUrl = reward.image_url || '';\n        \n        // 检查图片路径是否有效\n        if (!imageUrl || imageUrl === 'undefined') {\n          console.warn(`商品[${reward.name}]无图片路径，使用默认图片`);\n          imageUrl = '/static/images/mall/default-product.png';\n        }\n        // 确保图片路径格式正确（添加前缀如果缺失）\n        else if (!imageUrl.startsWith('/') && !imageUrl.startsWith('http')) {\n          console.log(`修正商品[${reward.name}]图片路径: ${imageUrl} -> /${imageUrl}`);\n          imageUrl = '/' + imageUrl;\n        }\n        \n        // 更新reward对象的image_url\n        reward.image_url = imageUrl;\n        \n        // 确保stock_quantity字段存在\n        if (reward.stock !== undefined && reward.stock_quantity === undefined) {\n          reward.stock_quantity = reward.stock;\n        }\n        \n        // 确保required_points字段存在\n        if (reward.points !== undefined && reward.required_points === undefined) {\n          reward.required_points = reward.points;\n        }\n        \n        console.log(`处理后的商品[${reward.name}]图片路径: ${reward.image_url}`);\n        \n        return reward;\n      });\n      return rewards;\n    } else {\n      console.error('获取商品列表失败:', result?.message);\n      return [];\n    }\n  } catch (error) {\n    console.error('获取商品列表出错:', error);\n    return [];\n  }\n};\n\n// 验证管理员登录状态的工具函数 - 只返回状态，不自动跳转\nconst verifyAdminLogin = (autoRedirect = false) => {\n  const adminLoginStatus = uni.getStorageSync('admin_login_status');\n  if (adminLoginStatus !== 'loggedin') {\n    if (autoRedirect) {\n      console.log('管理员未登录，可能需要跳转');\n    }\n    return false;\n  }\n  return true;\n};\n\n/**\n * 上传图片到static目录 - 不检查登录状态\n * @param {String} filePath 本地临时文件路径\n * @returns {Promise<String>} 上传后的文件URL\n */\nexport const uploadImageToStatic = async (filePath) => {\n  return new Promise((resolve, reject) => {\n    try {\n      console.log('开始上传图片，临时路径:', filePath);\n      uni.showLoading({ title: '上传中...' });\n      \n      // 生成文件名（使用时间戳和随机数确保唯一性）\n      const timestamp = Date.now();\n      const randomStr = Math.random().toString(36).substring(2, 8);\n      const fileExtension = filePath.substring(filePath.lastIndexOf('.') + 1);\n      const fileName = `product_${timestamp}_${randomStr}.${fileExtension}`;\n      \n      // 读取文件内容并转为Base64\n      try {\n        // 设置更长的超时时间\n        const timeout = setTimeout(() => {\n          uni.hideLoading();\n          console.warn('图片上传处理超时，使用默认图片');\n          resolve('static/images/mall/default-product.png'); // 返回不带斜杠的路径\n        }, 30000); // 30秒超时\n        \n        const fileContent = uni.getFileSystemManager().readFileSync(filePath, 'base64');\n        \n        // 调用云函数保存文件\n        uniCloud.callFunction({\n          name: 'saveFileToStatic',\n          data: {\n            fileContent: fileContent,\n            fileName: fileName\n          },\n          timeout: 30000, // 30秒超时\n          success: (res) => {\n            clearTimeout(timeout);\n            uni.hideLoading();\n            \n            if (res.result && res.result.success) {\n              // 现在云函数返回的是不带前导斜杠的路径，直接使用\n              const staticPath = res.result.data.url; // 不带斜杠的路径，适合存入数据库\n              console.log('图片上传成功，数据库路径:', staticPath);\n              resolve(staticPath);\n            } else {\n              console.error('保存到云端失败:', res.result);\n              // 使用默认图片路径 - 不带斜杠\n              resolve('static/images/mall/default-product.png');\n            }\n          },\n          fail: (err) => {\n            clearTimeout(timeout);\n            uni.hideLoading();\n            console.error('调用云函数失败:', err);\n            // 使用默认图片路径 - 不带斜杠\n            resolve('static/images/mall/default-product.png');\n          }\n        });\n      } catch (readError) {\n        uni.hideLoading();\n        console.error('读取文件失败:', readError);\n        // 使用默认图片路径 - 不带斜杠\n        resolve('static/images/mall/default-product.png');\n      }\n    } catch (error) {\n      uni.hideLoading();\n      console.error('处理图片失败:', error);\n      // 使用默认图片路径 - 不带斜杠\n      resolve('static/images/mall/default-product.png');\n    }\n  });\n};\n\n/**\n * 添加新商品\n * @param {Object} rewardData 商品数据\n * @returns {Promise<Object>} 添加结果\n */\nexport const addReward = async (rewardData) => {\n  try {\n    console.log('添加商品，数据为:', {\n      name: rewardData.name,\n      image_url: rewardData.image_url,\n      points: rewardData.points || rewardData.required_points,\n      stock: rewardData.stock || rewardData.stock_quantity\n    });\n    \n    // 先验证管理员登录状态\n    const adminLoginStatus = uni.getStorageSync('admin_login_status');\n    if (adminLoginStatus !== 'loggedin') {\n      console.error('管理员未登录，无法添加商品');\n      throw new Error('请先登录管理员账号');\n    }\n    \n    // 保存原始管理员ID，用于后续恢复状态\n    const adminId = uni.getStorageSync('admin_id') || 'admin';\n    \n    // 处理图片上传 - 使用默认图片代替错误处理\n    let imageUrl = rewardData.image_url;\n    if (imageUrl && (imageUrl.startsWith('wxfile:') || \n                   imageUrl.startsWith('http://tmp') || \n                   imageUrl.startsWith('file://') ||\n                   !imageUrl.includes('static/images/mall/'))) {\n      try {\n        console.log('检测到临时图片路径，开始上传...');\n        // 上传图片到static目录，不检查登录状态\n        imageUrl = await uploadImageToStatic(imageUrl).catch(err => {\n          console.error('图片上传出错，使用默认图片', err);\n          return '/static/images/mall/default-product.png';\n        });\n        console.log('图片已上传到static目录:', imageUrl);\n      } catch (uploadError) {\n        console.error('图片上传失败:', uploadError);\n        // 使用默认图片而不是抛出错误\n        imageUrl = '/static/images/mall/default-product.png';\n      }\n    }\n    \n    // 构建完整的商品数据，包含已上传的图片URL\n    const fullRewardData = {\n      ...rewardData,\n      image_url: imageUrl,\n      created_by: adminId\n    };\n    \n    let result;\n    try {\n      const response = await uniCloud.callFunction({\n        name: 'addReward',\n        data: fullRewardData\n      });\n      result = response.result;\n    } catch (cloudError) {\n      console.error('云函数调用失败:', cloudError);\n      // 尝试恢复管理员状态\n      if (!uni.getStorageSync('admin_login_status')) {\n        uni.setStorageSync('admin_login_status', 'loggedin');\n        uni.setStorageSync('admin_id', adminId);\n      }\n      throw new Error('网络错误，请稍后再试');\n    }\n    \n    if (result && result.success) {\n      // 确保管理员登录状态没有被意外清除\n      if (!uni.getStorageSync('admin_login_status')) {\n        uni.setStorageSync('admin_login_status', 'loggedin');\n        uni.setStorageSync('admin_id', adminId);\n      }\n      \n      // 触发全局商品更新事件\n      uni.$emit('rewardsUpdated', {\n        type: 'add',\n        data: result.data\n      });\n      return result.data;\n    } else {\n      throw new Error(result?.message || '添加商品失败');\n    }\n  } catch (error) {\n    console.error('添加商品失败:', error);\n    throw error;\n  }\n};\n\n/**\n * 更新商品信息\n * @param {Object} rewardData 商品数据\n * @returns {Promise<Object>} 更新结果\n */\nexport const updateReward = async (rewardData) => {\n  try {\n    console.log('正在更新商品，数据为:', {\n      id: rewardData._id,\n      name: rewardData.name,\n      image_url: rewardData.image_url,\n      is_hot: rewardData.is_hot,\n      is_limited: rewardData.is_limited\n    });\n    \n    // 处理图片上传 - 不依赖登录状态\n    let imageUrl = rewardData.image_url;\n    if (imageUrl && (imageUrl.startsWith('wxfile:') || \n                   imageUrl.startsWith('http://tmp') || \n                   imageUrl.startsWith('file://') ||\n                   !imageUrl.includes('static/images/mall/'))) {\n      try {\n        console.log('检测到临时图片路径，开始上传...');\n        // 上传图片到static目录，不检查登录状态\n        imageUrl = await uploadImageToStatic(imageUrl).catch(err => {\n          console.error('图片上传出错，使用默认图片', err);\n          return 'static/images/mall/default-product.png';\n        });\n        console.log('图片已上传到static目录:', imageUrl);\n      } catch (uploadError) {\n        console.error('图片上传失败:', uploadError);\n        // 使用默认图片而不是抛出错误\n        imageUrl = 'static/images/mall/default-product.png';\n      }\n    }\n    \n    // 确保boolean类型字段正确传递\n    const normalizedData = {\n      ...rewardData,\n      image_url: imageUrl,\n      is_hot: rewardData.is_hot === true,\n      is_limited: rewardData.is_limited === true,\n      is_limited_time: rewardData.is_limited === true // 保持字段一致\n    };\n    \n    console.log('发送到云函数的数据:', {\n      id: normalizedData._id,\n      name: normalizedData.name,\n      is_hot: normalizedData.is_hot,\n      is_limited: normalizedData.is_limited,\n      is_limited_time: normalizedData.is_limited_time,\n      image_url: normalizedData.image_url\n    });\n    \n    const { result } = await uniCloud.callFunction({\n      name: 'updateReward',\n      data: normalizedData\n    });\n    \n    if (result && result.success) {\n      // 触发全局商品更新事件\n      uni.$emit('rewardsUpdated', {\n        type: 'update',\n        data: result.data\n      });\n      return result.data;\n    } else {\n      throw new Error(result?.message || '更新商品失败');\n    }\n  } catch (error) {\n    console.error('更新商品失败:', error);\n    throw error;\n  }\n};\n\n/**\n * 删除商品\n * @param {String} rewardId 商品ID\n * @returns {Promise<Object>} 删除结果\n */\nexport const deleteReward = async (rewardId) => {\n  try {\n    const { result } = await uniCloud.callFunction({\n      name: 'deleteReward',\n      data: { id: rewardId }\n    });\n    \n    if (result && result.success) {\n      // 触发全局商品更新事件\n      uni.$emit('rewardsUpdated', {\n        type: 'delete',\n        data: { id: rewardId }\n      });\n      return result.data;\n    } else {\n      throw new Error(result?.message || '删除商品失败');\n    }\n  } catch (error) {\n    console.error('删除商品失败:', error);\n    throw error;\n  }\n};\n\n/**\n * 获取商品总数\n * @returns {Promise<Number>} 商品总数\n */\nexport const getRewardCount = async () => {\n  try {\n    const { result } = await uniCloud.callFunction({\n      name: 'getRewards',\n      data: { countOnly: true }\n    });\n    \n    if (result && result.success) {\n      return result.count || 0;\n    } else {\n      throw new Error(result?.message || '获取商品数量失败');\n    }\n  } catch (error) {\n    console.error('获取商品数量失败:', error);\n    return 0;\n  }\n}; "],"names":["getCurrentUserFromProfile","uni","uniCloud","updatePointsCache","getPoints"],"mappings":"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"}